import fonts.fontAwesome;
import win.ui;
import win.ui.menu;
import tarray;
import domisoft;
/*DSG{{*/
var winform = win.form(text="分类和特性查询";right=999;bottom=751;image=$"\res\SE BG.jpg";bkBottom=0;bkLeft=0;bkRight=0;bkTop=0)
winform.add(
button={cls="button";text='\uF0E2';left=8;top=688;right=40;bottom=720;color=0x0000FF;db=1;dl=1;font=LOGFONT(h=-16;name='FontAwesome');z=7};
button2={cls="button";text="可选项调研表增加下拉菜单";left=8;top=640;right=216;bottom=672;db=1;dl=1;z=9};
edit={cls="edit";left=8;top=32;right=216;bottom=64;dl=1;dt=1;edge=1;z=6};
edit2={cls="edit";left=232;top=32;right=528;bottom=64;dl=1;dt=1;edge=1;z=8};
listview4={cls="listview";left=8;top=227;right=216;bottom=638;ah=1;aw=1;db=1;dt=1;edge=1;fullRow=1;z=12};
listview_Characteristic_statement={cls="listview";left=537;top=440;right=993;bottom=728;ah=1;aw=1;db=1;dr=1;edge=1;fullRow=1;z=14};
listview_Characteristic_value={cls="listview";left=536;top=88;right=992;bottom=431;ah=1;aw=1;dr=1;dt=1;edge=1;fullRow=1;z=3};
listview_Characteristics={cls="listview";left=224;top=88;right=528;bottom=728;ah=1;aw=1;db=1;dt=1;edge=1;fullRow=1;z=2};
listview_Classification={cls="listview";left=8;top=88;right=216;bottom=216;aw=1;dl=1;dt=1;edge=1;fullRow=1;msel=false;z=1};
splitter={cls="splitter";left=216;top=87;right=223;bottom=637;ah=1;db=1;dt=1;z=4};
splitter2={cls="splitter";left=528;top=88;right=536;bottom=728;ah=1;db=1;dt=1;z=5};
splitter3={cls="splitter";left=8;top=218;right=216;bottom=225;aw=1;horz=1;z=13};
splitter4={cls="splitter";left=539;top=431;right=988;bottom=437;aw=1;horz=1;z=15};
static={cls="static";text="查询分类/成品编码/喷粉类";left=10;top=10;right=210;bottom=24;dl=1;dt=1;transparent=1;z=10};
static2={cls="static";text="查询特性";left=236;top=8;right=316;bottom=24;dl=1;dt=1;transparent=1;z=11}
)
/*}}*/

/*
import console
console.open();
*/
/*sqliteDB{{*/
import config;
import sqlite;
var db, err = sqlite(io.joinpath(config.dbServer.path, "qhc_OD_lib.db"),,1/*_SQLITE_OPEN_READONLY*/);	//打开数据库连接
if err win.msgbox(err);
/*}}*/

/*输入框清空小按钮{{*/
winform.edit.translateCommand();
winform.edit2.translateCommand();

var actrls  = winform.edit.addCtrl({ 
	{cls="button";text="r";font=LOGFONT(name='Marlett';charset=2/*_SYMBOL_CHARSET*/);hide=1;width=16;height=16;marginTop=0.2/*垂直居中*/;marginRight=5 } 
})
var bctrls  = winform.edit2.addCtrl({ 
	{cls="button";text="r";font=LOGFONT(name='Marlett';charset=2/*_SYMBOL_CHARSET*/);hide=1;width=16;height=16;marginTop=0.2/*垂直居中*/;marginRight=5 } 
})
actrls[1].oncommand = function(id,event){
	owner.parent.text="" 
}
bctrls[1].oncommand = function(id,event){
	owner.parent.text="" 
}
/*}}*/
var filterDeleted = function(t){
	if !t or !#t return t; 
	var z = {};
	if t.fields z.fields = t.fields;
	for (i=1; #t) {
		if !t[i].特性 continue;
		if t[i].更改标记	//无标记不代表删除哦
			if string.find(t[i].更改标记,"删") continue;
		table.push(z, t[i])
	}
	if table.indexOf(z.fields,"特性值") table.sort(z, lambda(a) tonumber((owner.特性值)) < tonumber(a.特性值));
	else if table.indexOf(z.fields,"特性") table.sort(z, lambda(a) owner.特性 < a.特性);
	return z;
}
var sortby = function(t,c){
	if !#t return t; 
	table.sort(t, lambda(a) (owner[c]) < a[c]);
	return t;
}
var searchClass = function(str){	//search分类
	if !str return null; 
	str = string.upper(string.trim(str));
	var t = db.getTable("SELECT * FROM `分类`", { 分类 : str });
	return filterDeleted(t);
}
var searchClassByBG = function(str){	//按BG号search分类,喷粉分类
	if !str return null; 
	str = string.upper(string.trim(str));
	var t = db.stepQuery("SELECT * FROM `默认值`", { 产品编码 : str });
	var p = db.stepQuery("SELECT * FROM `喷粉类别`", { 物料 : str });
	return t[["分类"]], p[["喷粉类别"]];
}

var searchClassByChar = function(str){//按特性反查search分类
	if !str return null; 
	str = string.upper(string.trim(str));
	var t = db.getTable("SELECT DISTINCT 分类, 分类描述 FROM `分类`", { 特性 : str });
	return t;
}
var searchOption = function(str){//search特性
	if !str return null; 
	str = string.upper(string.trim(str));
	var t = db.getTable("SELECT * FROM `特性参数规划表`", { 特性 : str });
	return filterDeleted(t);
}
var searchBGbyOption = function(str){//按分类查search BG
	if !str return null; 
	str = string.upper(string.trim(str));
	var t = db.getTable("SELECT DISTINCT 产品编码 FROM `默认值`", { 分类 : str });
	return t;
}
var 喷粉部分表;
var searchPaintClass = function(str){ //search喷粉分类
	if !str return null; 
	str = string.upper(string.trim(str));
	var t = db.getTable("SELECT * FROM `喷粉分类组成`", { 产品系列号 : str });
	return t;
}
var searchColor = function(colorGroupId){//search喷粉颜色组
	if !colorGroupId return null; 
	var t = db.getTable("SELECT * FROM `颜色分组`", { 颜色分组 : colorGroupId });
	return sortby(t,"默认颜色可选项类别");
}

var initPaintClass = function(){//search喷粉部位
	var d = db.getTable("SELECT * FROM `喷粉部位`");
	if !d or !#d return null; 
	var t = {};
	for (i=1; #d)
		t[d[i]["喷粉部位编码"]] = d[i]["喷粉部位描述"];
	return t; 
}

var bgTab = {fields = {[1]="物料";[2]="物料描述"}};
var keepBG = function(hcode){
	import QHC;
	if !hcode return ;  
	if tarray.findValue(bgTab, hcode) return ; 
	var hitem = QHC.getSapItem(hcode);
	table.push(bgTab, {
			"物料" : hitem.物料;
			"物料描述" : hitem.物料描述
		}
	)
	winform.listview4.setTable(bgTab);
}

var abb = null; //延迟线程ID
var delay_query = 600 //延迟时间 mm

var editChange = function(text){
	if !text return ; 
	//winform.listview_Classification.clear(true);
	winform.listview_Characteristics.clear(true);
	winform.listview_Characteristic_value.clear(true);
	//winform.listview4.clear(true);

	var t;
	var bt /*分类*/, pt/*喷粉分类*/;
	if #text==11 and string.startWith(text, "BG",true) {
		bt, pt= searchClassByBG(text);
		
		t = searchClass(bt);
		keepBG(text);
	}
	
	if string.startWith(text, "CG",true) {
		喷粉部分表 := initPaintClass();
		t = searchPaintClass(text);	
	}
	if !table.count(t) {
		t = searchClass(text);
	}
	if !#t return ;
	
	var tClass, tOpts, tBGs;
	
	if string.startWith(text, "CG",true){
		tClass = tarray.uniqueCol(tarray.sliceCol(t,2,3));
		for (i=1; #tClass)
			tClass[i].喷粉部位描述 = 喷粉部分表[tClass[i]["喷粉部位编码"]];
					
		table.push(tClass.fields,"喷粉部位描述");

		var ct = searchColor(tClass[1].颜色分组);
		tOpts = tarray.uniqueCol(tarray.sliceCol(ct,2,3));
		if tClass	winform.listview_Characteristics.setTable(tClass);
		if tOpts	winform.listview_Characteristic_value.setTable(tOpts);
	}else{
		tClass = tarray.uniqueCol(tarray.sliceCol(t,1,2));
		tOpts = tarray.uniqueCol(tarray.sliceCol(t,4,5));

		if pt
			table.push(tClass,{"分类":pt;"分类描述":"喷粉类别"});
		
		if tClass
			if !tarray.findValue(winform.listview_Classification.items, tClass[1]["分类"])
				winform.listview_Classification.setTable(tClass);
		if #tOpts
			winform.listview_Characteristics.setTable(tOpts);
		
		tBGs = searchBGbyOption(text);
		//win.msgbox(tBGs);
		
		if #tBGs{
			winform.listview4.clear();
			bgTab = {fields = {[1]="物料";[2]="物料描述"}};
			for(i=1; #tBGs){
				keepBG(tBGs[i].产品编码);
			}
		}
	}

}

winform.edit.onChange = function(){ 
	if(owner.onModified) owner.onModified(true);
	var text = owner.text;
	actrls[1].hide = !#text;
	owner.redraw();
	win.clearTimeout(abb)
	abb = win.setTimeout(editChange, delay_query, text)
}
var editChange2 = function(text){
	//winform.listview_Classification.clear(true);
	winform.listview_Characteristics.clear(true);
	winform.listview_Characteristic_value.clear(true);
	
	var t = searchOption(text); //查特性
	var ct = searchClassByChar(text); //反查分类
	if !#t return ;

	var tOpts = tarray.uniqueCol(tarray.sliceCol(t,1,2));
	var cType = tarray.uniqueCol(tarray.sliceCol(t,3,4));

	if tOpts	winform.listview_Characteristics.setTable(tOpts);
	if cType	winform.listview_Characteristic_value.setTable(cType);
	if #ct
		winform.listview_Classification.setTable(ct);
}

winform.edit2.onChange = function(){ 
	if(owner.onModified)owner.onModified(true);
	var text = owner.text;
	bctrls[1].hide = !#text;
	owner.redraw();
	win.clearTimeout(abb)
	abb = win.setTimeout(editChange2, delay_query, text);
}
var lastOpt1,lastOpt2,lastOpt3,lastOpt4;//记住上次搜索项, 减少搜索频率

winform.listview_Characteristics.onSelChanged = function(selected,item,subItem,nmListView){
	var c = owner.getItemText(item,1);
	if c == lastOpt2 return ; 
	if !c return; 
	win.setTimeout( function(){
		var t = searchOption(c);
		if !#t return;	
		var cType = tarray.uniqueCol(tarray.sliceCol(t,3,4));
		winform.listview_Characteristic_value.clear(true);
		if cType	winform.listview_Characteristic_value.setTable(cType);
		lastOpt2 = c;
		winform.listview_Characteristic_statement.refresh();
		return true; 
	})
}
winform.listview_Classification.onSelChanged = function(selected,item,subItem,nmListView){
	var c = owner.getItemText(item,1);
	if c == lastOpt1 return ; 
	if !c return; 
	winform.edit.text = c;
	lastOpt1 = c;
	return true; 	
}
import table.product;
var product = function(arr){
    var t = {};
    for c in table.product(arr,true)  {
        var mt={};
        for k, v in c
        	table.push(mt, v);    
 		table.push(t, mt);
 	}
    return t;
}
winform.listview_Characteristic_statement.refresh = function(){
	winform.listview_Characteristic_statement.clear(true);
	
	//获取用户选中的特性列表
	var selectedCharacteristic = domisoft.getSelectedText(winform.listview_Characteristics);
	
	//根据特性列表分别查找特性值, 
	var CharacteristicValues = {}
	for (i=1; #selectedCharacteristic) //特性值列表保存在不同的键中
		 CharacteristicValues[i] = searchOption(selectedCharacteristic[i]);

	var statement = {};
	for (i=1; #CharacteristicValues){
		statement[i] = {};
		for(j=1; #CharacteristicValues[i]) //把特性值生成语句格式
			table.push(statement[i], { CharacteristicValues[i][j]["特性"] ++ " = '" ++ CharacteristicValues[i][j]["特性值"] ++ "'"})
	
	}
	if #statement>5 return ; //特性超过5个就不运算了, 结果太多会卡
	if !statement return ; 
	table.removeByValue(statement,null);
	if !#statement return ;
	var tab = product(statement);
	
	for (i=1; #tab){
		if i>128 break; //语句超过128条就不运算了, 结果太多会卡
		var x ={}
		for(j=1; #tab[i])
			table.push(x, table.unpack(tab[i][j]))
		tab[i] = ["语句" : string.join(x, " AND ")	]
	}

	tab.fields = {"语句"}
	winform.listview_Characteristic_statement.setTable(tab);
}
winform.listview4.onSelChanged = function(selected,item,subItem,nmListView){
	var c = owner.getItemText(item,1);
	if c == lastOpt4 return ; 
	if !c return; 
	winform.edit.text = c;
	lastOpt4 = c;
	return true; 	
}

winform.listview_Characteristic_statement.onRightClick = function(item,subItem,nmListView){
	var selected = domisoft.getSelectedText(owner);
	var charListitems = QHC.getCharList(selected);
	var pmenu = win.ui.popmenu(winform);
	var cmenu = win.ui.popmenu(winform)
	for(i=1; #charListitems)
		cmenu.add( charListitems[i], function(id){
			 	var char = cmenu.getString(id,0);

			/*removeSelected*/
				var listview_items = winform.listview_Characteristic_statement.items;
				var selected = domisoft.getSelectedText(winform.listview_Characteristic_statement);
				var selectedIndex = winform.listview_Characteristic_statement.selected;
				for (i=1; #selectedIndex)
					listview_items[selectedIndex[i]] = null;
				table.removeByValue(listview_items, null);	
				
			/*getNewItem*/
				var keepChar=[];
				var charValue=[];
				var testselected = string.split(selected[1],"< AND >");

				for (i=1; #testselected)
					if !string.indexOf(testselected[i], char)
						table.push(keepChar, testselected[i])

				for (i=1; #selected) {
					var testCharValue = string.split(selected[i], "< AND >")
					for (j=1; #testCharValue){
						if string.indexOf(testCharValue[j], char)
							table.push(charValue, table.pop(string.split(testCharValue[j],"=")))
					}
				}
					
				if #keepChar = 1 keepChar = keepChar[1];
				else keepChar = string.join(keepChar, " AND ");
				
				if #charValue = 1 charValue = charValue[1]
				else charValue = string.join(charValue, ", ");
				
				charValue = char + " IN(" + charValue + ")";
				
			/*addNewItem(newitem)*/	
				table.push(listview_items, {[1] = keepChar + " AND " + charValue});
				var newItems = []
				for k, v in  listview_items
					table.push(newItems, v) //处理稀疏数组
				winform.listview_Characteristic_statement.replaceItems(newItems);
		})
	pmenu.add("用in语句合并...", cmenu)

	var x, y = win.getMessagePos();
	pmenu.popup(x, y,true);
	
}
winform.button.oncommand = function(id,event){
			loadcodex("\forms\admin_only\BOM_OD_LIB.aardio");
}

/*CtrlC复制模块{{*/
for(name,ctrl in winform.eachControl("listview") ){
	ctrl.translateAccelerator = domisoft.ctrlC;
}
/*}}*/
winform.button2.oncommand = function(id,event){	
	loadcodex("\forms\Excel\可选项调研表增加下拉菜单.aardio");
}



winform.splitter3.split(winform.listview_Classification, winform.listview4);
winform.splitter4.split(winform.listview_Characteristic_value, winform.listview_Characteristic_statement);
winform.splitter.split({
			winform.listview_Classification,
			winform.listview4,
			winform.splitter3
		}, winform.listview_Characteristics);

winform.splitter2.split(winform.listview_Characteristics, {
	winform.listview_Characteristic_value,
	winform.splitter4,
	winform.listview_Characteristic_statement
});



winform.show();
win.loopMessage();
return winform;