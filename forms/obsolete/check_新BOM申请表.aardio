import console; 
console.open();
import com.excel;
var excel = com.excel(false);

var sht = excel.ActiveWorkbook.ActiveSheet;

/*sqliteDB{{*/
import sqlite.aes256;
_sapdb := (function(){
    if io.exist("\qhcsap.db")
    	_path=io.fullpath("\qhcsap.db");
	else
		if io.exist("\\ccnsia1a\separts\Admin\SAP\db\QHCSAP.db")
			_path="\\ccnsia1a\separts\Admin\SAP\db\QHCSAP.db";
    	else
    		win.msgbox("无法访问数据库!");
    return _path; 
})()

var db,err = sqlite.aes256(_sapdb, /*"CCL100100"*/);	//打开数据库连接

if (err) error(err)
/*}}*/

/*searchSapDB{{*/
var checkIsConfig = function(hcode){
		var sqlstr = "SELECT [物料], [物料是可配置的] FROM [所有物料] WHERE [物料] = '" ++ hcode ++"'";
		var t = db.getTable(sqlstr)
		if #t>0 return (t[1].物料是可配置的=="X");
		else return ""; 
}
/*}}*/

var getUpLevel = function(currentLevel){
	return string.left(currentLevel, #currentLevel - 2) ++ string.right(currentLevel, 1) - 1;
}

var  getSubLevel = function(currentLevel){
	return string.left(currentLevel, 1) ++ string.left(currentLevel, #currentLevel - 1) ++ string.right(currentLevel, 1) + 1
}

if !sht.Columns("B:B").find("BOM项目") return error("不是新BOM申请表"); 
if !sht.Rows("4:4").find("相关性语句") return error("不是最新版申请表"); 
var etab = (function(){
		var fields = {
			"层级";  "BOM项目";  "项目类别";  "物料号";  "物料描述";  "单位用量";  "单位";  "排序文本";  "物料类型";  "相关性语句"
		};
		var etr = function(){
			for (i = sht.usedRange.Rows.Count -3 ; 5; -1){
				if (sht.cells(i,"A").value2) return i;
			}
		}
		
		if !etr() return error("找不到边界");
		
		var tab = {};
		var eArr = sht.Range("$A$5:$J$" ++ etr()).value2
		for(i=1; #eArr; 1){    
	    	var d = table.array();
	    	for (j=1;#fields;1){
	    		d[fields[j]] = eArr[i][j];
	    		d["层级数"] = tonumber(string.trimleft(d["层级"], "."));
			}		
			table.push(tab,d);
		}
		return tab; 
})()

var rule_desp = {
	[1] = "层级跳跃错误";
	[2] = "层级含非法字符或格式错误";
	[3] = "可选项上级组件不可配置";
	[4] = "配置件没有下挂可选项, 如果是借用组件注意维护下挂的特征类和默认配置";
	[5] = "缺少单位用量"; //用量为0也报错

}
var sapErr = {
	[1] = function(i){
		if (i == 1) return ; 
		var c_lv = tonumber(string.trimleft(etab[i].层级, "."))
    	var u_lv =  tonumber(string.trimleft(etab[i-1].层级, "."))
    	if (c_lv && u_lv)
    		if (c_lv > u_lv)
    			return ( (c_lv - u_lv) !== 1 ) ; 
	}
	[2] = function(i){
		var t = string.split(etab[i].层级,".");
		return (#t !== t[#t] + 1); 
	}
	[3] = function(i){
		if !etab[i].物料号 return ; 
		if !string.startWith(etab[i].物料号 ,"H00809") return ; 
		if (etab[i].物料类型 !== "KMAT" ) return ; 
		for (j=i-1; 5; -1){
			if (etab[j].层级数 == etab[i].层级数 - 1){
				return !checkIsConfig(etab[j].物料号); 
			}
		}
	}
	[4] = function(i){
		if !etab[i].物料号 return ; 
		if !string.startWith(etab[i].物料号 ,"H00808") return ; 
		if (etab[i].物料类型 !== "HALB" ) return ; 
		if !checkIsConfig(etab[i].物料号) return ; 
		for (j=i+1;#etab;1){
			if etab[j].层级数 <= etab[i].层级数  break ; 
			if etab[j].物料号 
				if string.startWith(etab[j].物料号, "H00809") 
					return false //当前组件下面发现09号时
		}
		return true; 
	}
	[5] = function(i){
		return !etab[i].单位用量; 
	}

};




var getErr = {};

for(i=1; #etab; 1){
	for(j=1;#sapErr;1){		
		if sapErr[j](i)
		table.push(getErr,{errRow=i; errRule=j})
	}
}

for(i=1;#getErr;1){
	console.log("第" ++ (getErr[i].errRow + 4) ++ "行, " ++ etab[getErr[i].errRow].物料号, rule_desp[getErr[i].errRule]);
}
console.pause(true);