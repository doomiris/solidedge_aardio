import fonts.fontAwesome;
import win.ui;
import config;
import fsys;
/*DSG{{*/
var winform = win.form(text="admin数据库刷新工具";right=759;bottom=469)
winform.add(
button={cls="button";text="import MM60";left=72;top=80;right=184;bottom=112;z=1};
button2={cls="button";text="import excel";left=72;top=112;right=184;bottom=144;z=3};
button3={cls="button";text="Merge && Publish";left=72;top=144;right=184;bottom=176;z=4};
button4={cls="button";text="分发";left=72;top=216;right=184;bottom=320;z=5};
button5={cls="button";text='\uF07C';left=576;top=24;right=608;bottom=56;font=LOGFONT(h=-16;name='FontAwesome');z=7};
button6={cls="button";text="xlsx";left=192;top=80;right=240;bottom=112;z=8};
edit={cls="edit";left=72;top=24;right=568;bottom=56;edge=1;z=6};
log={cls="richedit";left=288;top=80;right=568;bottom=320;edge=1;multiline=1;z=2}
)
/*}}*/

/* 无法把对象传进线程 */
winform.stepDBpath = io.getSpecial(0x5/*_CSIDL_MYDOCUMENTS*/) ++ "\SAP\SAP GUI\" + "step_qhcsap.db";
global.onError = function( err,over ){ 
	winform.log.print(err);
}
/*Get获取数据{{*/
var getFromSAP = function(winform){
	winform.log.print("连接SAP... ");
    import web.script;
    var vm = web.script("VBScript") ;
	vm.script = /*
	    	dim session
	 */
	vm.script = /*
	On Error Resume Next
		If Not IsObject(application) Then
   			Set SapGuiAuto  = GetObject("SAPGUI")
   			Set application = SapGuiAuto.GetScriptingEngine
		End If
		If Not IsObject(connection) Then
   			Set connection = application.Children(0)
		End If
		If Not IsObject(session) Then
   			Set session    = connection.Children(0)
		End If
		If IsObject(WScript) Then
   			WScript.ConnectObject session,     "on"
   			WScript.ConnectObject application, "on"
		End If
	On Error Goto 0
	*/
	if !vm.script.session
		winform.log.print("无法连接, 检查SAP是否已经启动?");
	if vm.script.session
		winform.log.print("连开成功, 开始获取清单...");
    vm.addCode(`
		session.findById("wnd[0]/tbar[0]/okcd").text = "mm60"
		session.findById("wnd[0]/tbar[0]/btn[0]").press
		session.findById("wnd[0]/usr/chkBEWFLG").selected = False
		session.findById("wnd[0]/usr/ctxtMS_MATNR-LOW").text = "*"
		session.findById("wnd[0]/usr/ctxtMS_WERKS-LOW").text = "0841"
		session.findById("wnd[0]/tbar[1]/btn[8]").press
		
		'session.findById("wnd[0]/tbar[1]/btn[45]").press
		'session.findById("wnd[1]/tbar[0]/btn[0]").press
		'session.findById("wnd[1]/usr/ctxtDY_FILENAME").text = "allcost.txt"
		
		session.findById("wnd[0]/usr/cntlGRID1/shellcont/shell").contextMenu
		session.findById("wnd[0]/usr/cntlGRID1/shellcont/shell").selectContextMenuItem "&XXL"
		
		session.findById("wnd[1]/tbar[0]/btn[0]").press
		session.findById("wnd[1]/usr/ctxtDY_FILENAME").text = "allcost.XLSX"
		
		session.findById("wnd[1]/tbar[0]/btn[11]").press
		session.findById("wnd[0]/tbar[0]/btn[12]").press
		session.findById("wnd[0]/tbar[0]/btn[12]").press
    `);
	winform.publish("getFromSAP",true);
}
/*}}*/
/*deal处理数据{{*/
var dealWithXlsx = function(winform){
	winform.log.print("等待3秒后开始处理数据...");
	sleep(3000) //等待workbook打开
	_allcost_file := "allcost.xlsx";
	//_path = io.getSpecial(0x5/*_CSIDL_MYDOCUMENTS*/) ++ "\SAP\SAP GUI\allcost.xlsx";
	import domisoft;
	winform.log.print("获取worksheet...");
	var sht = domisoft.getRunningWorkSheet(_allcost_file);
	if !sht return error("sht null"); 
	winform.log.print("获取usedrange...");
	var rng = sht.usedrange.value2;
	winform.log.print("打开step_db...");
	import config;
	import sqlite;
	var db = sqlite(winform.stepDBpath);
	if !db error("dberror");
	winform.log.print("删除旧数据 ...");
	if db.existsTable("all_cost") db.exec("DROP table all_cost;");
	db.exec("VACUUM");
	db.exec("CREATE TABLE [all_cost](物料 TEXT collate nocase,物料描述 TEXT collate nocase,MTyp TEXT,物料组 TEXT,BUn TEXT,价格 NUMERIC,PGr TEXT);")  
	winform.log.print("写入新数据 ...");
	db.beginTrans();
	for (i=2; #rng) {
		var cmd = db.prepare("INSERT INTO [all_cost] VALUES(@pcode,@textDesp,@mtype,@mgroup,@bun,@price,@pgr);");
		var nl = rng[i];
		cmd.step(
			pcode = nl[1];
			textDesp = nl[2];
			mtype = nl[3];
			mgroup = nl[4];
			bun = nl[5];
			price = tonumber(..string.replace(nl[6],",",""));
			pgr = nl[7]
		)
	}
	db.commitTrans();
	
	db.exec("UPDATE `all_cost` SET PGr = null WHERE PGr = '';");
	db.exec("UPDATE `all_cost` SET 价格 = null WHERE 价格 = 0;");
	
	winform.log.print("完成, 关闭数据库");
	db.close();
	winform.log.print("关闭" + _allcost_file);
	sht.parent.close(false);
	winform.log.print("excel处理完成.");
	winform.publish("sentSAPtoDB",true);
	winform.button.disabledText = null;
}
/*}}*/
subscribe("getFromSAP",function(...){
	thread.invoke(dealWithXlsx, winform)
} )

winform.button.oncommand = function(id,event){
	owner.disabledText = {"✶";"✸";"✹";"✺";"✹";"✷";text="等待进程执行..."}
	thread.invoke(getFromSAP, winform);
	//thread.invoke(dealWithTxt, winform);
}

/*importFromQHC{{*/
var importFromQHC2 = function(winform, path){
import console
console.open();

	import access.oleDb;
	var adb = access(path);
	
	var t = adb.getTable(`
	SELECT
		[物料], 
		[是否禁用] AS [禁用],
		[行业标准描述] AS [生产展平尺寸]
	FROM [Sheet1$]
	WHERE
		[物料] <>''
	`);
	var f = adb.getTable(`
		SELECT
			[物料]
		FROM [sheet1$]
		WHERE [是否禁用] = '禁用'
	`)
	var p = adb.getTable(`
		SELECT
			[物料],
			[行业标准描述] AS [生产展平尺寸]
		FROM [sheet1$]
		WHERE [行业标准描述]<> ''
	`)


	adb.close();

	import sqlite
	import config;
	//var sdb = sqlite(io.getSpecial(0x5/*_CSIDL_MYDOCUMENTS*/) ++ "\SAP\SAP GUI\" + "step_qhcsap.db");
	var sdb = sqlite(io.joinpath(config.__sapDownload,"step_qhcsap.db"));
	winform.log.print("删除旧数据...");
	if sdb.existsTable("qhc_export") sdb.exec("DROP table qhc_export");
	sdb.exec("CREATE TABLE qhc_export( 
		[物料] TEXT,
		[禁用] TEXT, 
		[生产展平尺寸] TEXT,
		UNIQUE (物料) 
		);"
	)
	winform.log.print("添加新数据...");
	var cmd = sdb.prepare("INSERT INTO [qhc_export] VALUES (?,?,?);");
	
	sdb.beginTrans();
	for (i=1; #t){
		cmd.step({
			t[i]["物料"]
		})
	}
	
	sdb.commitTrans()
	
	winform.log.print("写入新物料.禁用..");
	sdb.beginTrans();
	var cmd = sdb.prepare("UPDATE `qhc_export` SET [禁用]=@a WHERE [物料]=@b");
	for (i=1; #f){
		var item = f[i];
		cmd.step(
			a = "禁用";
			b = item["物料"]
		)
	}
	sdb.commitTrans()
	winform.log.print("写入新物料.生产展平尺寸..");
	sdb.beginTrans();
	var cmd = sdb.prepare("UPDATE `qhc_export` SET [生产展平尺寸]=@a WHERE [物料]=@b");
	for (i=1; #p){
		var item = p[i];
		cmd.step(
			a = item["生产展平尺寸"];
			b = item["物料"]
		)
	}
	sdb.commitTrans()
	sdb.close();
	t = null;
	winform.log.print("写入完成qhc_export");
	winform.button2.disabledText = null;
}
winform.button2.oncommand = function(id,event){

	var path = winform.edit.text;
	if !io.exist(path) return ; 
	
	config.admin.lastWorkingFolder = fsys.getParentDir(path);
	config.admin.save();
	
	owner.disabledText = {"✶";"✸";"✹";"✺";"✹";"✷";text="等待进程执行..."}
	winform.log.print("Accessing " ++ path );
	thread.invoke(importFromQHC2, winform, path);
}
/*mergeDb{{*/

var mergeDb = function(winform){
	import win;
	import config;
	import sqlite;
/*
import console
console.open();
*/
	var step_db = sqlite(winform.stepDBpath);
	winform.log.print("合并临时数据...");	
	if step_db.existsTable("所有物料")
		step_db.exec("DROP table 所有物料;");
	step_db.exec(`
	CREATE TABLE 所有物料 AS
		SELECT
			all_cost.物料,
			all_cost.物料描述, 
			all_cost.MTyp, 
			all_cost.物料组, 
			all_cost.BUn, 
			all_cost.价格, 
			all_cost.PGr, 
			qhc_export.禁用,
			qhc_export.生产展平尺寸 
		FROM all_cost
			LEFT JOIN qhc_export
				ON all_cost.物料 = qhc_export.物料;
	`); /* A table created using CREATE TABLE AS has no PRIMARY KEY and no constraints of any kind. */
	step_db.close();
	var db = sqlite(io.joinpath(config.dbServer.path,"qhcsap.db"));

	winform.log.print("备份数据...");
	if (db.existsTable("所有物料") and db.existsTable("备份所有物料"))
		db.exec("DROP table 备份所有物料;");
	if db.existsTable("所有物料") db.exec("ALTER TABLE 所有物料 RENAME TO 备份所有物料;");
	
	winform.log.print("挂接新数据...");
	db.exec("ATTACH DATABASE '" + winform.stepDBpath + "' as 'stepDB';")
	db.exec(`
		CREATE TABLE 所有物料 (
			物料 TEXT UNIQUE COLLATE NOCASE,
			物料描述 TEXT COLLATE NOCASE,
			MTyp TEXT, 
			物料组 TEXT, 
			BUn TEXT, 
			价格 NUMERIC, 
			PGr TEXT, 
			禁用 TEXT,
			生产展平尺寸 TEXT,
			PRIMARY KEY(物料)
		);
	`);
	db.exec(`
		INSERT INTO main.所有物料 SELECT * FROM stepDB.所有物料;
	`);
	
	winform.log.print("合并完成, 卸载挂接数据...");
	db.exec("DETACH DATABASE 'stepDB';")
	
	winform.log.print("删除备份...");
	if (db.existsTable("所有物料") and db.existsTable("备份所有物料"))
		db.exec("DROP table 备份所有物料;");
	winform.log.print("VACUUM...");
	db.exec("VACUUM");
	
	winform.log.print("更新索引...");
	/*  https://stackoverflow.com/questions/44947414/sqlite-speed-up-select-with-collate-nocase
		An index can be used to speed up a search only if it uses the same collation as the query.
		By default, an index takes the collation from the table column, 
		To speed up both queries, you need two indexes, one for each collation. So to use the default collation for the implicit index, and NOCASE for the explicit index:
		(Adding the second column to the index speeds up the ORDER BY in this query.)
	*/
	var t= db.getTable("SELECT name from [sqlite_master] where type='index';")
	import tarray;
	var x = tarray.transpose(t)
	if table.find(x,"物料"){
		db.exec("REINDEX 物料;")
		db.exec("REINDEX 物料描述;")
		db.exec("REINDEX MTyp;")
		db.exec("REINDEX 物料组;")
		db.exec("REINDEX BUn;")
	//	db.exec("REINDEX 禁用;")
	}else{
		db.exec("CREATE UNIQUE INDEX 物料 on 所有物料 (物料 collate nocase);")
		db.exec("CREATE INDEX 物料描述 on 所有物料 (物料描述 collate nocase);")
		db.exec("CREATE INDEX MTyp on 所有物料 (MTyp);")
		db.exec("CREATE INDEX 物料组 on 所有物料 (物料组);")
		db.exec("CREATE INDEX BUn on 所有物料 (BUn);")
	//	db.exec("CREATE INDEX 禁用 on 所有物料 (禁用);")
	}
	db.close();
	winform.button3.disabledText = null;
	
	import fsys.table;
	var vtab = fsys.table(io.joinpath(config.dbServer.path,"dblog.table"));
	vtab.assign(
		last_updated = time().local();
	);
	vtab.save();
	
	winform.log.print("合并数据完成.");
	
}

/*}}*/
winform.button3.oncommand = function(id,event){
	owner.disabledText = {"✶";"✸";"✹";"✺";"✹";"✷";text="等待进程执行..."};
	thread.invoke(mergeDb, winform);
}

winform.button4.oncommand = function(id,event){
	var copyfolder = function(winform, tart, dest){
		import fsys;
		winform.log.print("...正在复制到" + dest);
		fsys.copy(tart, dest, 0x4/*_FOF_SILENT*/ + 0x10/*_FOF_NOCONFIRMATION*/);
		winform.log.print("完成:" + dest);
	}
	_qhc_db = "\\CCNQIA05\temp-\LGP\_db";
	if !io.exist(_qhc_db) winform.log.print("无法访问:" + _qhc_db);
	else thread.invoke(copyfolder, winform, "S:\Admin\SAP\db\*.*", _qhc_db);
	thread.invoke(copyfolder, winform, "S:\Admin\SAP\db\*.*", "D:\users\CCL100100\Carrier Corporation\domisoft - General\db\");
}
getXlsxDbPath = function(){
	import fsys;
	if !io.exist(config.admin.lastWorkingFolder) return null; 
	var list = fsys.list(config.admin.lastWorkingFolder,,"SAP所有物料*.xlsx");
	if #list 
		return list[list[#list]]; 
}

winform.button5.oncommand = function(id,event){
	import fsys.dlg;
	winform.edit.text = fsys.dlg.open('Excel文件|*.xlsx|Excel文件|*.xls||',"打开QHC导出的数据文件",config.admin.lastWorkingFolder,owner);
}

winform.button6.oncommand = function(id,event){
	thread.invoke(dealWithXlsx, winform);
}

winform.edit.text = getXlsxDbPath();
winform.show();
win.loopMessage();
return winform;