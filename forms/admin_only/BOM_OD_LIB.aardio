import console; 
console.open();
/*如果报错, 检查 是不是qhc的A1列名丢失了 */
import console.progress;
var bar = console.progress();

import com.excel;
var excel = com.excel(true);

var sname = {"分类", "特性参数规划表", "分类", "特性参数规划表"}

var OneDriveCommercial = string.replace(string.getenv("OneDriveCommercial"), "OneDrive - ","");

var wbname = {
	{io.joinpath(OneDriveCommercial, "SAP数据整理 - QHC开发部(只读,仅用于参考)", "0.参数及分类汇总表2023.08.31.xlsx"), false, true, null,"0000"},
	{io.joinpath(OneDriveCommercial, "SAP数据整理 - 开利研发部", "0.参数及分类汇总表更新日期-研发中心2021.06.11.xlsx"), false,true,null,null},
}
if !io.exist(wbname[1][1]) console.log("找不到开发表", wbname[1][1]);
if !io.exist(wbname[2][1]) console.log("找不到研发表", wbname[2][1]);


/*getTabFromRange{{*/
var getTabFromRange = function(range){
	var simpleName = function(str){
		str = string.replace(tostring(str),"（","(");
		str = string.replace(str,"）",")");
		str = string.match(str,"<:+>");
		if str return string.trim(str); 
	}
    var eArr = range.value;
	var tab = {}; 
	tab.fields = table.shift(eArr);
	for(j=1;#tab.fields){
		tab.fields[j] = simpleName(tab.fields[j]);
	}
	tab = table.concat(tab, eArr);
	return tab; 	
}
/*}}*/

var wb = {}; 
var etab = {};
for (i=1; #wbname){
	wb[i] = excel.WorkBooks.Open(table.unpack(wbname[i]));
	wb[i].Sheets(1).Cells(1,"A").value2="分类"
	for (j=1; #table.unique(sname))
		table.push(etab, getTabFromRange(wb[i].Sheets(sname[j]).UsedRange));
	wb[i].Close(false);
}


excel.Quit();
import config;
import sqlite;
var db = sqlite(io.joinpath(config.dbServer.path,"qhc_OD_lib.db"));

var fieldsName = {};
var foam = {};

for (i=1; #etab){
	fieldsName[i] = string.join(etab[i].fields,", ");
	foam[i] = string.join(table.array(#etab[i].fields,"?"),",");
}

for (i=1; #table.unique(sname)){
	if db.existsTable(sname[i])
		db.exec("drop table " ++ sname[i]);
	console.log(sname[i])
	console.log(fieldsName[i])
	db.exec( "CREATE TABLE [" ++ sname[i] ++ "](" ++ fieldsName[i] ++");");
}

console.log("开始导入数据库")

import console.progress;
var bar = console.progress();

console.clearScreen();

for(i=1;#etab){
	db.beginTrans();
	var n = #etab[i];
	for (j = 1; n){
    	bar.setProgress(math.round(j*100/n), math.round(j*100/n) +"% processing " ++ sname[i] ++ "......");
		var cmd = db.prepare("INSERT INTO [" ++ sname[i] ++ "] VALUES("++ foam[i] ++ ");");
		if #etab[i][j] > #etab[i].fields etab[i][j] = table.slice(etab[i][j],1,#etab[i].fields) //解决多余列问题
		cmd.bind.parameters(table.unpack(etab[i][j])).step();
	};
	db.commitTrans();
}
if db.existsTable("分类汇总") db.exec("DROP table 分类汇总");
if db.existsTable("特性汇总") db.exec("DROP table 特性汇总");
db.exec(`
	CREATE TABLE 分类汇总 AS
		SELECT DISTINCT 分类.分类, 分类.分类描述
		FROM 分类
`);
db.exec(`
	CREATE TABLE 特性汇总 AS
		SELECT DISTINCT 特性参数规划表.特性, 特性参数规划表.特性描述
		FROM 特性参数规划表
`);
db.exec(`
	DELETE FROM 特性参数规划表
	WHERE 特性 IS NULL
`);
db.exec(`
	UPDATE 分类
	SET 特性描述 = (
		SELECT 特性描述 FROM 特性汇总 WHERE 特性汇总.特性 = 分类.特性
	)
`)
db.exec(`
	UPDATE 特性参数规划表
	SET 特性描述 = (
		SELECT 特性描述 FROM 特性汇总 WHERE 特性汇总.特性 = 特性参数规划表.特性
	)
`)
db.close();

console.log("完成")
console.pause(true);