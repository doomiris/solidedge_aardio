import win.ui;
/*DSG{{*/
var winform = win.form(text="aardio form";right=639;bottom=359;image=$"\res\SE BG.jpg";bkBottom=0;bkLeft=0;bkRight=0;bkTop=0)
winform.add(
edit2={cls="edit";left=56;top=12;right=176;bottom=36;aw=1;dl=1;dt=1;font=LOGFONT(h=-13);hide=1;readonly=1;z=2};
listview={cls="listview";left=0;top=40;right=640;bottom=360;ah=1;aw=1;db=1;dl=1;dr=1;dt=1;edge=1;fullRow=1;gridLines=1;z=1}
)
/*}}*/

import global;
import config;
import domisoft;
import process;
import win.clip;
import win.clip.file;
import sqlite;
import win.ui.accelerator;
import godking.rightMenu;
import win.dlg.message;
/*
import console;
console.open()
*/
import win.imageList;
var imgList = win.imageList.shell(1/*_SHIL_SMALL*/)
winform.listview.setImageList(imgList, 1/*_LVSIL_SMALL*/);
import fsys.info;
var refreshIcon = function(fileTab){
	for (i=1; #fileTab){
		var fullname = io.joinpath(fileTab[i]["路径"],fileTab[i]["文件名"]);
		var info = fsys.info.get(fullname, 0x100/*_SHGFI_ICON*/ | 0x80/*_SHGFI_USEFILEATTRIBUTES*/)
		var iconIndex = info ? info.iIcon : -1; // 如果获取失败则不显示图标
		var item = winform.listview.getItem(i);		
		item.iImage = iconIndex;		
		winform.listview.setItem(item,i);
	}
}

var fileLibMap = function(fullpath){
	if !fullpath return ; 
	import config;
	var libPathMaps = {
		"{config.__pdfLib}" = config.__pdfLib,
		"{config.__qhcLib}" = config.__qhcLib,
		"{config.__cabinetModelServer}" = config.__cabinetModelServer
	}
	fullpath = string.replace(fullpath,'%{}', libPathMaps)
	return fullpath; 
}
var reverseFileLibMap = function(fullpath){
	if !fullpath return ; 
	import config;
	var libPathMaps = {
		"{config.__pdfLib}" = io.joinpath(config.__pdfLib),
		"{config.__qhcLib}" = io.joinpath(config.__qhcLib),
		"{config.__cabinetModelServer}" = io.joinpath(config.__cabinetModelServer)
	}
	var invertLibPathMaps = table.invert(libPathMaps);
	console.dumpTable(invertLibPathMaps)
	var info = io.splitpath(fullpath);
	var fileDir = io.joinpath(info.drive,info.path);
	console.log(fileDir)
	var formatPath = string.replace(fullpath, "@" + info.dir, invertLibPathMaps[info.dir]);	
	return formatPath; 
}
/*查找图纸{{*/
var searchDocument = function (filenumber){
    //filenumber :=  winform.editUser0.text;
/*sqliteDB{{*/
	import sqlite;
	import config;
	var flistDB = sqlite(io.joinpath(config.dbServer.path,"drawing_lists.db"),,1/*_SQLITE_OPEN_READONLY*/);	//打开数据库连接
/*}}*/
	winform.edit2.text = "";

    winform.listview.clear();
    
    if !filenumber return ; 
    
    filenumber = string.crlf(filenumber,'\r\n' /* 默认值 */);
    
    //分隔符号转换行
	for k, v in {`、`, `，`, `;`, `；`, `,`, `|`,'\t'} 
		filenumber = string.replace(filenumber, v,'\r\n');    

    var userinputArr = string.split(filenumber, '\r\n');

	filenumber = table.shift(userinputArr);
  
    //winform.listview.insertColumn("正在查找图纸, 请稍等...",300,1);
	var searchFor = string.trimleft(filenumber,"H");

	var fileTab = table.create(,{fields={[2]="文件名";[3]="路径";[1]="类型";[4]="版本"}});

	var sql = "SELECT `文件名`, `路径` FROM `Lib` WHERE ??";
	sql = sqlite.format(sql, {[1]={文件名 = "%" + searchFor + "%"}});
	sql = string.replace(sql, "=", "LIKE");
	
	var flist = flistDB.getTable(sql);
	if (#flist == 0){
		var maptab = flistDB.getTable("SELECT * FROM `Map`", { 专用号  =  searchFor });
		if (#maptab > 0) {
			if #maptab[1].图号 winform.edit2.text = maptab[1].图号;
			winform.edit2.hide = !(#maptab[1].图号);
			sql = string.replace(sql, searchFor, maptab[1].图号);
			flist = flistDB.getTable(sql);
		}
	}
	if (#flist > 0) fileTab = table.concat(fileTab, flist);	
	
	for (i=1; #fileTab){
		var item = fileTab[i];
		var ext = io.splitpath(item["文件名"]).ext;
		item["类型"] = string.trimleft(string.upper(ext),".");
		fileTab[i] = item;
	}
	if !table.indexOf(fileTab.fields,"类型")
		table.unshift(fileTab.fields, "类型");
	winform.listview.header = fileTab.fields;
	
	for(i=1; #fileTab)
		fileTab[i]["路径"] = fileLibMap(fileTab[i]["路径"]);
	
	
	winform.listview.clear();
	winform.listview.setTable(fileTab);
	refreshIcon(fileTab)

//调整列宽	
	winform.listview.coulumnWidth := domisoft.setColumnWidth(winform.listview, {50,200,300,100})
/**
	winform.listview.setColumn({cx=50;fmt=0x2/*_LVCFMT_CENTER*/}, 1);
	winform.listview.setColumn({cx=200;fmt=0x0/*_LVCFMT_LEFT*/},   2);
	winform.listview.setColumn({cx=300;fmt=0x0/*_LVCFMT_LEFT*/}, 3);
	//winform.listview.setColumn({cx=100 ;fmt=0x2/*_LVCFMT_CENTER*/}, 4);
**/

    winform.listview.fillParent(3);
	flistDB.close();
}
/*}}*/
winform.listview.refreshFiles = function(){
    var rows = owner.getTable(owner.header);
	for (i=1; #rows){
		var fullName = io.joinpath(rows[i]["路径"], rows[i]["文件名"]);
		if !io.exist(fullName)
			rows[i] = null;
	}
	table.removeByValue(rows, null)
	owner.setTable(rows);
	refreshIcon(rows);
}

var deleteDrawingFile = function(fullname){
	if !fullname return;
	var info = io.splitpath(fullname);
	if string.cmpMatch(info.ext,".dft")
		if !winform.msgAsk("你正在删除[" + info.file + "], 请确认")
			return ; 
	
	if !io.exist(fullname)
		return winform.msgErr("文件[" + info.file + "]不存在")
	if !io.remove(fullname) 
		return winform.msgErr("删除文件[" + info.file + "]失败")

	import sqlite;
	import config;
	var db = sqlite(io.joinpath(config.dbServer.path,"drawing_lists.db"));
	db.exec("DELETE FROM `Lib` WHERE ??",{{"文件名"=info.file,"路径"=reverseFileLibMap(info.dir)}})
	db.close();
	return winform.msgInfo("已删除文件[" + info.file + "]")
}
winform.listview.onRightClick = function(item,subItem,nmListView){
    if !item return;
    var row = owner.getTable(owner.header)[item];
	var fullName = io.joinpath(row["路径"], row["文件名"]);
	var x,y = win.getMessagePos();
	var menu = win.ui.popmenu(winform);
	menu.add("打开文件...", λ() process.execute(fullName));
	menu.add("删除文件...", function(){
		winform.listview.delItem(item);
		//deleteDrawingFile(fullName);
	});
	menu.add("刷新", λ() winform.listview.refreshFiles());
	menu.add("更多...", λ() godking.rightMenu(
		winform/*父窗口*/,
		fullName/*文件路径*/,
		x/*菜单x*/,y/*菜单y*/,
		false/*是否相对坐标*/,
		false/*是否显示文件名*/)
	);
	menu.popup(x,y,true);

}
winform.listview.onDoubleClick = function(item,subItem,nmListView){
    if !item return;
    var row = owner.getTable(owner.header)[item];
	var fullName = io.joinpath(row["路径"], row["文件名"]);
	if io.exist(fullName)
		process.execute(fullName);
}
winform.listview.translateAccelerator = function( msg ){ 	
    var ctrl = ::GetKeyState(0x11/*_VK_CTRL*/);
    var vk = msg.wParam ;

    if( ( vk == 'C'# ) && ctrl  ){
		var tab = [];
    	var rows = owner.getTable(owner.header);
		for (i=1; owner.count){
			if table.indexOf(owner.selected, i){
				var fullName =io.joinpath(rows[i]["路径"], rows[i]["文件名"]);
				if io.exist(fullName)
					table.push(tab, fullName);
			}
		}     
		if #tab
			win.clip.file.write(tab,"copy");
        return true;
    }
}

winform.qtip_search = function(pcode){
	if !pcode return ; 
	searchDocument(pcode);
};

winform.show();

win.loopMessage();
return winform;
