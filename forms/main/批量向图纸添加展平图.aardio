import win.ui;
/*DSG{{*/
var winform = win.form(text="批量向图纸添加展平图";right=759;bottom=469)
winform.add(
button={cls="button";text="查找图纸内表格专用号";left=25;top=358;right=181;bottom=388;z=2};
button2={cls="button";text="清空";left=650;top=356;right=707;bottom=386;z=5};
button3={cls="button";text="展平图加入图纸";left=542;top=389;right=739;bottom=443;z=6};
checkbox={cls="checkbox";text="如果没有展平自动展平";left=28;top=399;right=371;bottom=419;z=7};
checkbox2={cls="checkbox";text="左对齐/放在图纸上方/添加标题";left=27;top=422;right=370;bottom=442;z=9};
combobox={cls="combobox";left=31;top=46;right=710;bottom=72;edge=1;items={};mode="dropdown";z=3};
edit2={cls="edit";text="Edit";left=138;top=9;right=699;bottom=37;edge=1;z=8};
listview={cls="listview";left=27;top=86;right=707;bottom=350;edge=1;z=1};
static2={cls="static";text="在此文件夹查找";left=32;top=22;right=146;bottom=44;transparent=1;z=4}
)
/*}}*/

import com;
import console;
import win.ui;
import console; 
var getColContent = function(keyword="专用号"){
	import solidedge.application;
	var seApp = solidedge.application();
	var dftDoc = seApp.ActiveDocument;
	var seTables = dftDoc.Tables;
	var specialNumbers = {};

	for (i = 1; seTables.Count) {
    	var seTable = seTables.Item(i);
    	
	   	var colCount = seTable.Columns.Count;
    	var rowCount = seTable.Rows.Count;
    	
    	// 遍历表格的第一行，查找标题中含有"专用号"的列
    	for (col = 1; colCount; 1) {
        	var headerText = seTable.Columns.item(col).HeaderRowValue;
        	if (headerText and string.find(headerText, "专用号")) {
            	// 找到含有"专用号"的列，读取该列的内容
            	for (row = 1; rowCount) {
                	var cellValue = seTable.Cell(row, col).value;
                	if (cellValue) {
                    	table.push(specialNumbers, cellValue);
                	}
            	}
        	}
    	}
	}
	return specialNumbers; 
}


/*
#写一个函数通过getColContent函数获取关键词清单, 然后在path文件夹内查找以清单内字符开头的文件, 扩展名是.psm, 返回一个新的由找到的文件名组成的清单
*/
var findFilesByKeywords = function(keywordList, folderPath) {
    import fsys;
    var fileList = {};
    var files = fsys.list(folderPath, ,"*.psm");

    for (i=1; #files) {
        var fileName = files[i];
        for (i = 1;  #keywordList) {
            if string.startsWith(fileName, keywordList[i], true) {
                table.push(fileList, files[fileName]);
                break;
            }
        }
    }
    return fileList;
};

var addFlatPatterns = function(sheetMetalFiles){
	import solidedge.application;
	var seApp = solidedge.application();
	var dftDoc = seApp.ActiveDocument;
	var activeSheet = dftDoc.ActiveSheet;
	
	// 放置 Flat Pattern
	var yOffset = 0; // 用于垂直偏移以避免重叠
	for (i = 1; #sheetMetalFiles) {
    	var filePath = sheetMetalFiles[i];
    	console.log("处理文件: ", filePath);
        	
    	var partDoc = dftDoc.ModelLinks.Add(filePath);
    	if (!partDoc) {
        	console.error("无法打开文件: ", filePath);
    	}
	
    	// 获取 Flat Pattern 模型
    	var flatPatternModel = partDoc.ModelDocument.FlatPatternModels.Item(1);
    	if (!flatPatternModel) {
    	    console.log("没有找到此文件的flatpattern,尝试创建...", filePath);
    	    import solidedge.SheetMetalDocument;
    	    var psm = seApp.Open(filePath, false);
    	    var sePsm = solidedge.SheetMetalDocument(psm);
    	    var succ = !!sePsm.addFlatPattern();
        	if succ
        		sePsm.close(true);
        	else {
        	    sePsm.close(false);
    	    	console.error("创建失败了, 请手动创建吧, 此次跳过此文件", filePath);
    	    	continue;
    	    }

        	
    	}
    	// 在图纸中放置 Flat Pattern 视图
    	var drawingView = activeSheet.DrawingViews.AddSheetMetalView(
        	partDoc,
        	1, //igTopView
        	1, //scale
        	0, // X 坐标 (左对齐)
        	yOffset, // Y 坐标 (垂直偏移)
        	2 // seSheetMetalFlatView
    	);
		drawingView.CaptionDefinitionTextPrimary = ..io.splitpath(filePath).file;
    	// 更新视图
    	drawingView.Update();
	
    	// 计算下一个视图的垂直偏移（基于视图的高度）
    	var a,b,c,d = drawingView.Range();
    	var viewHeight = d-b;
    	yOffset += viewHeight + 0.05; // 添加一些间距
	
    	// 关闭 SheetMetal 文件,不保存更改
	
	}
}
var path = "E:\Users\work_dominic\CCR\Cabinets\Monaxis";
var pcode = getColContent()
console.dump(pcode)
console.more(,true)
var pfile = findFilesByKeywords(pcode, path)
console.dump(pfile)
console.more(,true)
addFlatPatterns(pfile)
console.pause();


winform.show();
win.loopMessage();
