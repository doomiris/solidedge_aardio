import fonts.fontAwesome;
import win.ui;

/*DSG{{*/
qtip_winform = win.form(text="QHC物料查询";right=638;bottom=502;image=$"\res\SE BG.jpg";bkBottom=0;bkLeft=0;bkRight=0;bkTop=0)
qtip_winform.add(
bkplus1={cls="plus";text="过滤";left=24;top=8;right=64;bottom=40;bgcolor=12632256;dl=1;dt=1;z=10};
bkplus2={cls="plus";text="SAP";left=64;top=8;right=104;bottom=40;bgcolor=12632256;border={bottom=5;color=-16777088};dl=1;dt=1;notify=1;z=6};
bkplus3={cls="plus";text="详细";left=104;top=8;right=144;bottom=40;bgcolor=12632256;dl=1;dt=1;notify=1;z=8};
bkplus4={cls="plus";text="图纸";left=144;top=8;right=184;bottom=40;bgcolor=12632256;dl=1;dt=1;z=7};
bkplus5={cls="plus";text="版次";left=184;top=8;right=224;bottom=40;bgcolor=12632256;dl=1;dt=1;z=9};
button={cls="button";text='\uF002  查询SAP';left=520;top=8;right=619;bottom=38;default=1;dr=1;dt=1;font=LOGFONT(name='FontAwesome');tabstop=1;z=2};
button2={cls="button";text='\uF053';left=0;top=8;right=24;bottom=40;color=8421504;dl=1;dt=1;flat=1;font=LOGFONT(h=-13;name='FontAwesome');z=12};
buttonD={cls="button";text='\uF142';left=235;top=10;right=249;bottom=40;color=8421504;dl=1;dt=1;flat=1;font=LOGFONT(h=-13;name='FontAwesome');z=3};
custom={cls="custom";left=0;top=56;right=640;bottom=504;ah=1;aw=1;bgcolor=16777215;db=1;dl=1;dr=1;dt=1;edge=1;z=1};
edit2={cls="edit";left=56;top=12;right=176;bottom=36;aw=1;dl=1;dt=1;font=LOGFONT(h=-13);hide=1;readonly=1;z=4};
editUser3={cls="edit";left=256;top=8;right=520;bottom=47;autohscroll=false;aw=1;dl=1;dr=1;dt=1;edge=1;multiline=1;vscroll=1;z=5};
splitter={cls="splitter";left=0;top=48;right=640;bottom=56;aw=1;frame=1;horz=1;z=11}
)
/*}}*/

qtip_winform.show();

import win.ui.tabs;
import win.ui.menu;
import win.ui.tooltip; 
import color;
import config;
import domisoft;

/*拆分条{{*/
qtip_winform.splitter.split(qtip_winform.editUser3, qtip_winform.custom);
qtip_winform.splitter.ltMin = 32;
qtip_winform.splitter.rbMin = 96;
/*}}*/
/*TABS{{*/
//qtbs 不用var声明, 所有子项就都能直接访问了.
qtbs = win.ui.tabs(
	qtip_winform.bkplus1,
	qtip_winform.bkplus2,
	qtip_winform.bkplus3,
	qtip_winform.bkplus4,
	qtip_winform.bkplus5
);
qtbs.skin({
	foreground={
		active=0xFFFFFFFF;
		default=0x00FFFFFF;
		hover=0x38FFFFFF
	};
	color={
		default=0xFF000000; 
	};
	checked={
		foreground={default=0xFF00BBFF;}; 
		color={default=0xFF002E59;};
	}
})
_qfName = {
	[1] = "\forms\main\qtip_filter.aardio";
	[2] = "\forms\main\qtip_list.aardio";
	[3] = "\forms\main\sap_search.aardio";
	[4] = "\forms\main\drawing_search.aardio";
	[5] = "\forms\main\check_QHC_Release.aardio";
}
for k,v in _qfName
	qtbs.loadForm(k, v);
	


qtbs.forms[1].publish("load") //加载
qtbs.selIndex = 2; 
qtbs.currentTab = 2;
qtbs.lastTab = 2;
qtbs.onSelchange = function(idx,strip,form){
	if idx == qtbs.currentTab return ; 
	qtbs.lastTab = qtbs.currentTab;
	qtbs.currentTab = idx;
} 

qtbs.open = function(selIndex,pcode){
	qtbs.selIndex = selIndex;
	qtbs.forms[selIndex].publish("qtip_search_"++selIndex, pcode);
}

/*}}*/


/*搜索按钮{{*/
qtip_winform.button.oncommand = function(id,event){
	if event !== 0/*_BN_CLICKED*/ return ;
	var txt = qtip_winform.editUser3.text;
	select(qtbs.currentTab) {
		case 2 {}
		else {
			qtbs.selIndex = 2;
		}
	}
	qtbs.forms[qtbs.currentTab].publish("qtip_search_2", txt);
}
/*}}*/

/*onclose{{*/
qtip_winform.onClose = function(hwnd,message,wParam,lParam){
	if (db) db.close();	
}
/*}}*/
/*弹出历史记录菜单{{*/
qtip_winform.buttonD.oncommand = function(id,event){
	var historyMenu = win.ui.popmenu(qtip_winform);	
	var getSelectedList = function(){
		var lv = qtbs.forms[2].listview;		
		var lst = lv.selected;
		var tab = {};
		for (i=1; #lv.items)
			if table.indexOf(lst,i) or !#lst
				table.push(tab, lv.getItemText(i,1));
		return tab; 
	}
	var addFav = function(){
		var fav = config.qtip.fav;
		var favName = domisoft.showInputBox("收藏", "请为要收藏的清单命名:","", qtip_winform)
		if	!favName return ;
		if #table.filter(fav, lambda(v,index) favName == v[["title"]]) 
			if !win.msgboxTest("点击确认覆盖相同名称收藏","覆盖确认")
				return ;
		for (i=1; #fav)
			if fav[i][["title"]]==favName
				fav[i] = null;

		table.push(fav, {["title"] = favName; ["list"] = getSelectedList()});
		config.qitp.save();		
	}
	var readClipH = function(){
		var t= domisoft.readClipHcode();
		if t
			qtip_winform.editUser3.text = string.join(t,'\r\n');
		
	}
	historyMenu.add("识别剪贴板图像",readClipH);
	historyMenu.add();
	var favTab = {
    	[1] = "★ 收藏夹"; 
    	[2] = { 
    			[1] = {
    				text = "+ 添加到收藏夹...";
    				proc = addFav;
        		};
        		[2] = {/* ---- */};
    	}
    }; 
    
    var fav = config.qtip.fav;
	for (i=1; #fav)	{
		if !fav[i] continue;
		table.push(favTab[2], {	
				text = fav[i]["title"];
				proc = function(id){
					var shift = ::GetKeyState(0x10/*_VK_SHIFT*/) & 0x8000;
					var ctrl = ::GetKeyState(0x11/*_VK_CTRL*/) & 0x8000;
					
					if !shift and !ctrl	//无按钮时打开清单
    					qtbs.forms[2].publish("qtip_search_2", string.join(fav[i]["list"],";"));
    				if shift and !ctrl	//按shift时询问删除
    					if win.msgboxTest("确认删除此条收藏?","删除收藏")
    						fav[i] = null;
    				if !shift and ctrl //按ctrl时替换为当前清单
    					if win.msgboxTest("替换为当前选择的清单?","确认替换")
    						fav[i]["list"] = getSelectedList();
    				if shift and ctrl	//同时按询问修改名称
    					fav[i]["title"] = domisoft.showInputBox("修改名称", "请输入新名称",fav[i]["title"] , qtip_winform);
	
    			}
    	})
    }
	historyMenu.addTable({favTab})
	historyMenu.add();//分隔线
	for (i=1; #config.qTipLog){
		if !config.qTipLog[i] continue;
    	historyMenu.add(
    		text = config.qTipLog[i];
    		proc = function(id){
    		    var shift = ::GetKeyState(0x10/*_VK_SHIFT*/) & 0x8000;
				if !shift {
    			qtip_winform.editUser3.text = config.qTipLog[i];
    			qtip_winform.editUser3.setFocus();
    			}else
    				config.qTipLog[i] = null;
    		}
    	);
	}
	var pt = ::POINT();
	::User32.GetCursorPos(pt);
	//弹出托盘菜单以前,一定要前置主窗口中,不然不点击菜单不会消失
	win.setForeground(qtip_winform.hwnd)
	historyMenu.popup(pt.x,pt.y,true )
}
/*}}*/
/*右键点击快速取消筛选{{*/
qtip_winform.bkplus1.wndproc = function(hwnd,message,wParam,lParam){
	if message == 0x205 /* _WM_RBUTTONUP */ qtbs.forms[1].syslink.onHyperlinkClick();
}
var updateColor = function(btCtrl){
	var t = #qtbs.forms[1].clSapType.selected + #qtbs.forms[1].clUnit.selected + #qtbs.forms[1].clOrderType.selected;
	btCtrl.border = t ? {top=5;color=-16711936} : null;
	btCtrl.redraw();
}
subscribe("filter_Changed",function(...){
	updateColor(qtip_winform.bkplus1);
})
/*}}*/

/*后退按钮{{*/
qtip_winform.button2.oncommand = function(id,event){
	if event == 0/*_BN_CLICKED*/
		qtbs.selIndex = 2;
}
/*
 (限制)
低级鼠标钩子回调函数不要做耗时操作，
如果耗时超过一秒或超过注册表限制的更小时间，系统会直接删除钩子。
没有任何方法可以检查到删除操作，应当遵守规则避免滥用。

耗时操作建议在钩子回调中创建线程，或使用 winform.setTimeout 延时异步执行。
在超级热键回调函数中，如果返回一个函数也可以不阻塞异步执行。
*/
import mouse.hook;
var hook = mouse.hook();
//录制回调函数

hook.proc = function(msg,x,y,mouseData,injected,flags,timeStamp,extraInfo){
    if( injected ) return; //模拟鼠标不处理
    _dt = 30; //ms
    select(msg) {
		case 0x20C /* _WM_XBUTTONUP */ {
			if ::HIWORD(mouseData) == 1	//后退
				qtip_winform.setTimeout(function(){
					qtbs.selIndex = 2
				}, _dt)			
			else	//前进
				qtip_winform.setTimeout(function(){
					qtbs.selIndex = qtbs.lastTab
				}, _dt)				
		}
	}
}
/*}}*/


var tooltipCtrl = win.ui.tooltip( qtip_winform );//在窗口上创建tooltip控件
tooltipCtrl.addTool(qtip_winform.buttonD, `
查看搜索历史记录和清单收藏夹
> 创建清单时仅保存当前选择的物料, 无选择时保存整个清单
- 按住SHIFT+点击:删除记录/收藏
- 按住CTRL+点击:替换收藏内容为当前选择的清单
- 同时按住SHIFT+CTRL+点击:修改收藏名称
`)

win.loopMessage();
return qtip_winform;