//简单选项卡（ classic tab control ）
import win.ui;
/*DSG{{*/
var mainForm = win.form(text="使用简单选项卡控件（win.ui.ctrl.tab）";right=663;bottom=387)
mainForm.add(
tab={cls="tab";left=14;top=16;right=645;bottom=360;db=1;dl=1;dr=1;dt=1;z=1}
)
/*}}*/

/*
"简单选项卡（ classic tab control ）"使用指南：
doc://library-guide/std/win/ui/ctrl/tab.md

tab 选项卡的子页面可以直接加载一个窗体文件，例如：
mainForm.tab.loadForm("\res\frmPage1.aardio")
实际开发软件的时候建议用这种方法。

也可以用 mainForm.tab.add() 函数直接创建窗口。
mainForm.tab.add()的参数与 win.form的参数完全相同，
直接从窗体设计器生成的代码中复制构建窗体的参数放到 mainForm.tab.add() 里面就可以。

tab 子窗口并不需要与 tab 控件保持大小完全一致，不需要去计算坐标。
aardio 窗体设计器可以通过控件的【固定边距】【自适应大小】等属性设置控件在运行时位置保持不变、或自动调整适应窗口大小。 
*/
 
//添加一个窗口作为选项卡的子页面 

import console
console.open()
var exApps = {};
var hwndTab = {};
com.enumRunning( 
	function(displayName,object){  
		if object
			if object.application
				var hwnd = object.application.hwnd;
				if !table.find(hwndTab,hwnd){
					table.push(hwndTab, hwnd)
					table.push(exApps, object.application)
				}
	}
)
var fms = {}
for (i=1; #hwndTab)
	if exApps[i].name = "Microsoft Excel"
		table.push(fms, mainForm.tab.add( text = "Excel" + hwndTab[i]))

for (i=1; #fms){
	for object,interface,name,index in com.eachRunning() {
		if object
			if object.application
				if object.application.hwnd == hwndTab[i]{
					fms[i].add(
						edit = { 
							cls="edit";bottom=500;right=500;left=0;top=0;z=1;edge=1;multiline=1;
						}; 
					)
					fms[i].edit.print (object.visible)
					fms[i].edit.print (object.application.workbooks.Count)
				}
					//console.log(fms[i].text,index,name,object.application.hwnd)
	}
}



mainForm.show(true) 
win.loopMessage();