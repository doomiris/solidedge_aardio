import console; 
console.open();

import tarray;
import com;
var w_index = 1
var excel_app_tab={};

com.enumRunning( 
	function(displayName,object){
			if com.GetTypeInfo(object) {
				if string.indexOf(com.GetTypeInfo(object).GetDocumentation().name,"_Workbook") {
					if !table.indexOf(excel_app_tab, object.FullName||displayName) {
						if io.splitpath(displayName).ext !== ".xlam" {
							console.log(w_index, io.splitpath(displayName).file);				
							excel_app_tab[w_index] = object;
							w_index++;
						}
					}
				}
			}
	}
)

var getExcel_index = console.getNumber( "请输入序号:" );

var sht = excel_app_tab[getExcel_index].ActiveSheet;
excel_app_tab = null;

if !sht console.pause("需要重新执行");

import QHC;


/*
if !sht.Columns("B:B").find("BOM项目") return error("不是新BOM申请表"); 
if !sht.Rows("4:4").find("相关性语句") return error("不是最新版申请表"); 
*/
var etab = (function(){
		var fields = {
			"原父项"; "原子项"; "原子项描述"; "原子项数量"; "原子项单位"; "原子项类型"; "更改备注";
			"新父项"; "BOM项目"; "项目类别"; "新子项"; "新子项描述"; "新子项数量"; "新子项单位"; "新子项类型";
			"是否继承";	"继承生效日期";	"是否有OD";

		};

		var etr = function(){
			var f = sht.usedrange.find("B2907F02");
			return f.row - 1; 
		};
		
		if !etr() return error("找不到边界");
		
		var tab = {};
		var eArr = sht.Range("$B$9:$S$" ++ etr()).value2;
		for(i=1; #eArr){    
	    	var d = table.array();
	    	for (j=1;#fields){
	    		d[fields[j]] = eArr[i][j];
			}		
			table.push(tab,d);
		}
		return tab; 
})()

var etab_count = #etab;

var rule_desp = {
	[1] = "前后父项物料不匹配(不要改变原有模版公式)";
	[2] = "项目类别固定值:L";
	[3] = "新增子项:子项需写在右侧";
	[4] = "删除子项:子项需写在左侧";
	[5] = "更改用量:前后相同";
	[6] = "用量:小数位数不超过3位 (手动删除或使用round函数, 直接调整显示状态也不行)";
	[7] = "ZA单位对应数量应该是整数";
	[8] = "物料类型/单位与SAP内不一致/新号可能未生效请确认"; 
	[9] = "ROH不可有下级物料"; 
	[10] = "单位用量错误: 非数字/没填/0值"; 
	[11] = "给09组新增子项时确认是否有OD"; 
	[12] = "父项物料被禁用, 请先申请解禁再更改BOM";
	[13] = "子项物料被禁用, 请先申请解禁再更改BOM";
	[14] = "相同内容重复操作";  
}

var sapErr = {
	[1] = function(i){
		return etab[i][["原父项"]] !== etab[i][["新父项"]]; 
	};
	[2]=function(i){
		return etab[i][["项目类别"]] !== "L"; 
	};
	[3]=function(i){
		if etab[i][["更改备注"]] == "新增子项" or etab[i][["更改备注"]] == "新增BOM"
			return #etab[i][["原子项"]] and !#etab[i][["新子项"]];
	};
	[4]=function(i){
		if etab[i][["更改备注"]]=="删除BOM" or etab[i][["更改备注"]]=="删除子项"
			return !#etab[i][["原子项"]] and #etab[i][["新子项"]];
	};
	[5]=function(i){
		if etab[i][["更改备注"]] == "更改用量"
			return etab[i][["原子项数量"]] == etab[i][["新子项数量"]]; 
	};
	[6]=function(i){
		if etab[i][["更改备注"]]=="删除BOM" or etab[i][["更改备注"]]=="删除子项" return;
		var n = tarray.cNum(etab[i][["新子项数量"]]);
		var a = string.split(tostring(n),".");
		if #a>1
			return #a[2]>3; 
	};
	[7]=function(i){
		if etab[i][["更改备注"]]=="删除BOM" or etab[i][["更改备注"]]=="删除子项" return;
		if etab[i][["新子项单位"]]  == "ZA"
			if !string.indexOf(etab[i][["新子项描述"]],"胶带")
					return !math.isInteger(tarray.cNum(etab[i][["新子项数量"]]));  
	};
	[8]=function(i){
		if etab[i][["更改备注"]]=="删除BOM" or etab[i][["更改备注"]]=="删除子项" return; 
		var item = QHC.getSapItem(etab[i][["新子项"]]);
		return item[["MTyp"]] !== etab[i][["新子项类型"]] or item[["BUn"]] !== etab[i][["新子项单位"]]; 
	};
	[9]=function(i){
		if etab[i][["更改备注"]]=="新增子项" or etab[i][["更改备注"]]=="新增BOM" {
			var item = QHC.getSapItem(etab[i][["原父项"]]);
			return item[["MTyp"]] == "ROH"; 
		}
	};
	[10]=function(i){
		if etab[i][["更改备注"]]=="删除BOM" or etab[i][["更改备注"]]=="删除子项" return;
		return !(tarray.cNum(etab[i][["新子项数量"]]))
	};
	[11]=function(i){
		if string.startWith(etab[i][["原父项"]], "H00809")
			return etab[i][["是否有OD"]] !== "√"
	};
	[12]=function(i){	//仅检查禁用状态, 忽略新号问题
		var item = QHC.getSapItem(etab[i][["原父项"]]);
		return item[["禁用"]]=="禁用"
	};
	[13]=function(i){	//仅检查禁用状态, 忽略新号问题
		//if !#etab[i].新子项 return ; 
		var item = QHC.getSapItem(etab[i][["新子项"]]);
		return item[["禁用"]]=="禁用"
	};
	[14]=function(i){
		if i==1 return ; 
		for(j=1; i-1){
			if etab[j][["原父项"]]==etab[i][["原父项"]] and 
				etab[j][["原子项"]]==etab[i][["原子项"]] and
					etab[j][["新子项"]]==etab[i][["新子项"]]
						return true;
		}
	}
};


import console.progress;
var bar = console.progress();

var getErr = {};
console.clearScreen()

for(i=1; etab_count){
	bar.setProgress(math.round(i*100/etab_count), math.round(i*100/etab_count) + "% processing......");
	if !#etab[i].原父项 continue;
	for(j=1; #sapErr){
		if sapErr[j](i)
			table.push(getErr, {errRow=i; errRule=j});
	};
}
if !#getErr console.log("插件未发现错误.");
else
	for(i=1; #getErr){
		console.log("第" ++ (getErr[i].errRow + 8) ++ "行, ", rule_desp[getErr[i].errRule]);
	}

console.pause(true);