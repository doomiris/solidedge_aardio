import win.ui;
/*DSG{{*/
var chk_excel_NewPart_form = win.form(text="检查专用号申请表";right=759;bottom=400)
chk_excel_NewPart_form.add(
button={cls="button";text="开始";left=9;top=6;right=137;bottom=47;dl=1;dt=1;z=1};
combobox2={cls="combobox";left=146;top=16;right=749;bottom=42;dl=1;dr=1;dt=1;edge=1;items={};mode="dropdownlist";z=3};
listview={cls="listview";left=0;top=60;right=760;bottom=369;ah=1;db=1;dl=1;dr=1;dt=1;edge=1;fullRow=1;gridLines=1;z=2};
progress={cls="progress";left=0;top=370;right=760;bottom=400;db=1;dl=1;dr=1;edge=1;max=100;min=0;z=4}
)
/*}}*/

import tarray;
import com.excel;
import string.keywords;
import config;
import fsys.table;
import QHC;
import win.clip;

/*
	import console
	console.open()
*/

var excel_0 = com.excel(false);
var excel_2;
var getErr = {};
var etab = {};
com.enumRunning( 
	function(displayName,object){
		try{
			var s = com.GetTypeInfo(object).GetDocumentation().name;
			if s = "_Workbook"
				if string.keywords('新增|专用号|申请').findOne(displayName)
					chk_excel_NewPart_form.combobox2.add(displayName);
		}
	}
)

var get_excel = function(wbname){
	var e;
	com.enumRunning( 
		function(displayName,object){
			try{
				var s = com.GetTypeInfo(object).GetDocumentation().name;
				if s = "_Workbook"
					if displayName == wbname
						e = object.application; 
			}
		}
	)
	return e; 
}

if chk_excel_NewPart_form.combobox2.count {
	var findActiveWB = table.indexOf(chk_excel_NewPart_form.combobox2.items, excel_0.ActiveWorkbook.Name)
	chk_excel_NewPart_form.combobox2.selIndex = findActiveWB ? findActiveWB : 1;
}

/*etab相关函数{{*/
/*
var getUpLevel = function(currentLevel){
	return string.left(currentLevel, #currentLevel - 2) ++ string.right(currentLevel, 1) - 1;
}

var  getSubLevel = function(currentLevel){
	return string.left(currentLevel, 1) ++ string.left(currentLevel, #currentLevel - 1) ++ string.right(currentLevel, 1) + 1
}

var hasChild = function(z){
	if etab[z+1] return etab[z].层级数 < etab[z+1].层级数;
	else return false; 
}
var getParentIndex = function(current_index){
	for (i= current_index-1 ; 1; -1) {
		if etab[i].层级数 == (etab[current_index].层级数-1)
			return i; 
	}
}
*/
/*}}*/


chk_excel_NewPart_form.button.oncommand = function(id,event){
	if !#chk_excel_NewPart_form.combobox2.selText return ; 	
	excel_2 = get_excel(chk_excel_NewPart_form.combobox2.selText);
	sht = excel_2.ActiveWorkbook.ActiveSheet;
	
	if sht.AutoFilterMode
		sht.AutoFilterMode = false;
	if sht.ListObjects("表1")
		sht.ListObjects("表1").AutoFilter.ShowAllData();
	
	if !sht.Columns("A:A").find("4.基本计量:后附") return error("不是专用号申请表:"+ '\n\n' ++sht.parent.name +"$["+sht.name+"]"); 
	if !sht.Rows("2:2").find("产品大类") return error("不是最新版专用号申请表"); 


	etab = (function(){
			var fields = {
				"序号";
				"长度检查";
				"申请人";
				"申请日期";
				"物料描述";
				"基本计量单位";
				"SAP物料组";
				"产品大类";
				"物料类型";
				"属性";
				"物料分类明细";
				"材质分类";
				"用途";
				"SAP展开尺寸";
				"SAP基本物料";
				"SAP颜色分组";
				"SAP是否为点焊中最大件";
				"SAP密度";
				"适用产品型号";
				"换算关系";
				"图号";
				"是否关键部件";
			};
			var etr = function(){
				for (i=sht.range("A:A").find("4.基本计量:后附").row-4; 3; -1){
					if (sht.cells(i,"E").value2) return i;
				}
			}
			
			if !etr() return error("找不到物料描述");
			
			var tab = {};
			var eArr = sht.Range("$A$3:$V$" ++ etr()).value2
			for(i=1;#eArr;1){    
	    		var d = table.array();
	    		for (j=1;#fields;1){
	    			d[fields[j]] = eArr[i][j];
				}		
				table.push(tab,d);
			}
			return tab; 
	})()
	
	var etab_count = #etab;

/*RULES_DESP{{*/
	var rule_desp = {
		[1] = "S-组不能是ROH";
		[2] = "S-组只能是01,08,09";
		[3] = "SA组只能是08";
		[4] = "SG组只能是08,09";
		[5] = "SD组只能是08";
		[6] = "SH组只能是01";
		[7] = "SC组只能是01";
		[8] = "SB组需要填写展开尺寸";
		[9] = "SB组需要填写基本物料";
		[10] = "SC组需要填写颜色分组";
		[11] = "SC组需要填写展开尺寸 (2021.03.26新增的要求, 用于系统计算粉末用量)";
		[12] = "R-组必须是ROH";
		[13] = "R-组必须是非配置";
		[14] = "R-组不能是09";
		[15] = "R-组不能填写:展开尺寸,基本物料,颜色分组,点焊";
		[16] = "09 必须 是KMAT";
		[17] = "09 必须 是配置";
		[18] = "09 必须 是SG";
		[19] = "09 不能是ROH";
		[20] = "SG组只能是配置";
		[21] = "HALB只能是S组";
		[22] = "HALB只能是01,02, 08 ";
		[23] = "ROH只能是R组";
		[24] = "R-结尾数字需要和物料分类明细对应";
		[25] = "ROH不能填写:展开尺寸,基本物料,颜色分组,点焊";
		[26] = "ROH必须是非配置";
		[27] = "SC组不需要填基本物料";
		[28] = "KMAT必须是09";
		[29] = "KMAT必须是SG";
		[30] = "KMAT只能是配置";
		[31] = "KMAT不能是ROH";
		[32] = "物料描述结尾是可选项,分类明细必须是09";
		[33] = "物料描述结尾是可选项,SAP物料组必须是SG";
		[34] = "物料描述结尾是可选项,物料类型必须是KMAT";
		[35] = "物料描述长度超过40";
		[36] = "展开尺寸长度超过18";
		[37] = "物料描述中间含有多余的空格,连字符,引号";
		[38] = "物料描述首尾含有多余的空格";
		[39] = "喷粉件为未喷粉在前，已喷粉在后";
		[40] = "物料描述有重复行";
		[41] = "点焊组件(未喷)是SH组";
		[42] = "SH组不需要填写展开尺寸和基本物料";
		[43] = "系统已存在同名物料";
		[44] = "发泡组件需要SD";
		[45] = "已喷物料应是SC组";
		[46] = "'喷粉'请用'已喷粉'或'已喷'替代";
		[47] = "没选择'用途'";
		[48] = "没选择'是否是关键零件'";
	}

/*}}*/
	
/*RULES{{*/
	var sapErr={
		[1] = function(i){return (etab[i].SAP物料组[[1]]=="S" and etab[i].物料类型 == "ROH")}
		[2] = function(i){return (etab[i].SAP物料组[[1]]=="S" and !table.find({"01";"08";"09"}, etab[i].物料分类明细))}
		[3] = function(i){return (etab[i].SAP物料组=="SA" and etab[i].物料分类明细 !== "08")}
		[4] = function(i){return (etab[i].SAP物料组=="SG" and !table.find({"08";"09"}, etab[i].物料分类明细))}
		[5] = function(i){return (etab[i].SAP物料组=="SD" and etab[i].物料分类明细 !== "08")}
		[6] = function(i){return (etab[i].SAP物料组=="SH" and etab[i].物料分类明细 !== "01")}
		[7] = function(i){return (etab[i].SAP物料组=="SC" and etab[i].物料分类明细 !== "01")}
		[8] = function(i){return (etab[i].SAP物料组=="SB" and !etab[i].SAP展开尺寸)}
		[9] = function(i){return (etab[i].SAP物料组=="SB" and !table.find({"热锌板";"不锈钢"}, etab[i].SAP基本物料))}
		[10] = function(i){return (etab[i].SAP物料组=="SC" and !etab[i].SAP颜色分组)}
		[11] = function(i){return (etab[i].SAP物料组=="SC" and !etab[i].SAP展开尺寸)}
		[12] = function(i){return (etab[i].SAP物料组[[1]]=="R" and etab[i].物料类型 !== "ROH")}
		[13] = function(i){return (etab[i].SAP物料组[[1]]=="R" and etab[i].属性 !== "非配置")}
		[14] = function(i){return (etab[i].SAP物料组[[1]]=="R" and etab[i].物料分类明细 == "09")}
		[15] = function(i){return (etab[i].SAP物料组[[1]]=="R" and (etab[i].SAP展开尺寸 or table.find({"热锌板";"不锈钢"}, etab[i].SAP基本物料) or etab[i].SAP颜色分组 or etab[i].SAP是否为点焊中最大件))}
		[16] = function(i){return (etab[i].物料分类明细 == "09" and etab[i].物料类型 !== "KMAT")}
		[17] = function(i){return (etab[i].物料分类明细 == "09" and etab[i].属性 !== "配置")}
		[18] = function(i){return (etab[i].物料分类明细 == "09" and etab[i].SAP物料组 !== "SG")}
		[19] = function(i){return (etab[i].物料分类明细 == "09" and etab[i].物料类型 == "ROH")}
		[20] = function(i){return (etab[i].SAP物料组=="SG" and etab[i].属性 !== "配置") or (etab[i].SAP物料组 !== "SG" and etab[i].属性 == "配置")}
		[21] = function(i){return (etab[i].物料类型=="HALB" and etab[i].SAP物料组[[1]] !== "S")}
		[22] = function(i){return (etab[i].物料类型=="HALB" and !table.find({"01";"02";"08"}, etab[i].物料分类明细))}
		[23] = function(i){return (etab[i].物料类型=="ROH" and etab[i].SAP物料组[[1]] !== "R")}
		[24] = function(i){if etab[i].SAP物料组 !== "R05" and etab[i].物料分类明细 !== "16" return (etab[i].SAP物料组[[1]]=="R" and string.trimleft(etab[i].SAP物料组,"R") !== etab[i].物料分类明细)}
		[25] = function(i){return (etab[i].物料类型=="ROH" and (etab[i].SAP展开尺寸 or table.find({"热锌板";"不锈钢"}, etab[i].SAP基本物料) or etab[i].SAP颜色分组 or etab[i].SAP是否为点焊中最大件))}
		[26] = function(i){return (etab[i].物料类型=="ROH" and etab[i].属性 !== "非配置")}
		[27] = function(i){return (etab[i].SAP物料组=="SC" and table.find({"热锌板";"不锈钢"}, etab[i].SAP基本物料))}
		[28] = function(i){return (etab[i].物料类型 == "KMAT" and etab[i].物料分类明细 !== "09")}
		[29] = function(i){return (etab[i].物料类型 == "KMAT" and etab[i].SAP物料组 !== "SG")}
		[30] = function(i){return (etab[i].物料类型 == "KMAT" and etab[i].属性 !== "配置")}
		[31] = function(i){return (etab[i].物料类型 == "KMAT" and etab[i].物料类型 == "ROH")}
		[32] = function(i){return (string.right(etab[i].物料描述,3,true)=="可选项" and etab[i].物料分类明细 !== "09")}
		[33] = function(i){return (string.right(etab[i].物料描述,3,true)=="可选项" and etab[i].SAP物料组 !== "SG")}
		[34] = function(i){return (string.right(etab[i].物料描述,3,true)=="可选项" and etab[i].物料类型 !== "KMAT")}
		[35] = function(i){return (string.len(etab[i].物料描述) > 40)}
		[36] = function(i){if !!(etab[i].SAP展开尺寸) return (string.len(etab[i].SAP展开尺寸) > 18)}
		[37] = function(i){
				//return (string.indexOf(etab[i].物料描述,"  "))
				return ( string.keywords('  |--|- -|~~|~ ~|&|“|”|"').findOne(etab[i].物料描述)); 
			}
		[38] = function(i){return (string.trim(etab[i].物料描述) !== etab[i].物料描述)}
		[39] = function(i){
			if etab[i].SAP物料组 == "SC" 
				return (string.replace(string.trim(etab[i].物料描述),"已喷","未喷") !== string.trim(etab[i-1].物料描述))
		}
		[40] = function(i){
			for (j=i+1;#etab;1)
				if (etab[j].物料描述==etab[i].物料描述) return true; 
		}
		[41] = function(i){if !string.indexOf(etab[i].物料描述,"已喷") return (string.indexOf(etab[i].物料描述,"点焊") and etab[i].SAP物料组 !== "SH")}
		[42] = function(i){return (etab[i].SAP物料组=="SH" and (etab[i].SAP展开尺寸 or etab[i].SAP基本物料 or etab[i].SAP是否为点焊中最大件))}
		[43] = function(i){
			import QHC;
			if #QHC.getSapItemByDesp(etab[i].物料描述) return true; 
		}
		[44] = function(i){
			if etab[i].物料类型=="HALB"
				if etab[i].物料分类明细 == "08"
					if string.indexOf(etab[i].物料描述,"发泡")
						if !string.indexOf(etab[i].物料描述,"总装")
							return etab[i].SAP物料组!=="SD" ;
	
		}
		[45] = function(i){
			if string.indexOf(etab[i].物料描述, "已喷")
				return etab[i].SAP物料组!=="SC"; 
	
		}
		[46] = function(i){
			return string.indexOf(etab[i].物料描述, " 喷粉"); 
	
		}
		[47] = function(i){
			return !#etab[i].用途; 
	
		}
		[48] = function(i){
			return !#etab[i].是否关键部件; 	
		}
	};
	/*}}*/
	
	
	var bar = chk_excel_NewPart_form.progress
	bar.min = 0;
	bar.max = etab_count;
	getErr = {};
	getErr.fields = {"行"; "序号";"错误描述"}
	for(i=1; etab_count){		
		bar.pos = i;
		for(j=1; #sapErr){
			if sapErr[j](i)
				table.push(getErr, {
				"行":i+2;
				"序号": etab[i].序号;
				"错误描述": rule_desp[j];
			})
		}
	}
	
	
	
	chk_excel_NewPart_form.listview.setTable(getErr);
	
	chk_excel_NewPart_form.listview.setColumn({cx=30 ;fmt=0x2/*_LVCFMT_CENTER*/},1);
	chk_excel_NewPart_form.listview.setColumn({cx=120 ;fmt=0x2/*_LVCFMT_CENTER*/},2);
    chk_excel_NewPart_form.listview.fillParent(3);
	
}
chk_excel_NewPart_form.onDestroy = function(){
   	if excel_0 excel_0.alerts = true;    //防止意外关闭后Excel假死
   	if excel_2 excel_2.alerts = true;    //防止意外关闭后Excel假死
}

/*点击定位{{*/
chk_excel_NewPart_form.listview.onSelChanged = function(selected,item,subItem,nmListView){
	if !selected return ; 
	if !item return ;
	var row = owner.getItemText(item,1);
	if row
		excel_2.ActiveWindow.ScrollRow = row;
}
/*}}*/

/*右键菜单{{*/
chk_excel_NewPart_form.listview.onnotify = function(id,code,ptr){
	select(code) {
    	case 0xFFFFFFFB/*_NM_RCLICK*/ {
    		var selectedRow = owner.getSelection();
    		if !selectedRow return ; 
			var x,y = win.getMessagePos();
		
			var menu = win.ui.popmenu(chk_excel_NewPart_form);			
			menu.add("隐藏可忽略项", function(){
				var t = table.filter(getErr,
					function(v,index){
						return !string.indexOf(v["错误描述"], "可忽略"); 
					}
				);
				t.fields = getErr.fields;
				chk_excel_NewPart_form.listview.setTable(t);
			});
			menu.add("显示可忽略项", λ() chk_excel_NewPart_form.listview.setTable(getErr));
			menu.popup(x,y,true);
    	}
    }
}
/*}}*/
/*CTRLC复制模块{{*/
chk_excel_NewPart_form.listview.translateAccelerator = function( msg ){ 
    var ctrl = ::GetKeyState(0x11/*_VK_CTRL*/);
//    var shift =  ::GetKeyState(0x10/*_VK_SHIFT*/);
//    var alt = ::GetKeyState(0x12/*_VK_ALT*/);
//    var selectedRow = owner.getSelection();
    var vk = msg.wParam;    
    if( ( vk == 'C'# ) && ctrl ){
        var tab=table.array();
        for (i=1; #owner.selected)
            table.push(tab,string.join(owner.items[owner.selected[i]],'\t'));
		win.clip.write(string.join(tab,'\n'));
        return true;
    }
}

/*}}*/

chk_excel_NewPart_form.show();

win.loopMessage();
return chk_excel_NewPart_form;