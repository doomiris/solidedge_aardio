import console; 
console.open();

import tarray;
import com;
var w_index = 1;
var excel_app_tab={};

com.enumRunning( 
	function(displayName,object){
			if com.GetTypeInfo(object) {
				if string.indexOf(com.GetTypeInfo(object).GetDocumentation().name,"_Workbook") {
					if !table.indexOf(excel_app_tab, object.FullName||displayName) {
						if string.indexOf(io.splitpath(displayName).name, "调研表") {
							console.log(w_index, io.splitpath(displayName).file);				
							excel_app_tab[w_index] = object;
							w_index++;
						}
					}
				}
			}
	}
)
if !#excel_app_tab return; 
var getExcel_index = console.getNumber( "请输入序号:" );
var wb = excel_app_tab[getExcel_index];
excel_app_tab = null;

console.clearScreen();

_od_list_sht = "_od_list_sht";

console.log("打开数据库连接...")
import config;
import sqlite;
var db, err = sqlite(io.joinpath(config.dbServer.path,"qhc_OD_lib.db"),,1/*_SQLITE_OPEN_READONLY*/);	
if err win.msgbox(err);


/*借用OD查询的函数记得更新{{*/
var filterDeleted = function(t){
	if !t or !#t return t; 
	var z = {};
	if t.fields z.fields = t.fields;
	for (i=1; #t) {
		if !t[i].特性 continue;
		if t[i].更改标记	//无标记不代表删除哦
			if string.find(t[i].更改标记,"删") continue;
		table.push(z, t[i])
	}
	if table.indexOf(z.fields,"特性值") table.sort(z, lambda(a) tonumber((owner.特性值)) < tonumber(a.特性值));
	else if table.indexOf(z.fields,"特性") table.sort(z, lambda(a) owner.特性 < a.特性);
	return z;
}
var searchClass = function(str){	//search分类
	if !str return null; 
	str = string.upper(string.trim(str));
	var t = db.getTable("SELECT * FROM `分类`", { 分类 : str });
	return filterDeleted(t);
}
var searchOption = function(str){
	if !str return null; 
	var t = db.getTable("SELECT * FROM [特性参数规划表]", { 特性 = string.upper(str) });
	return filterDeleted(t);
}
/*}}*/


console.log("当前文档...", wb.name)
/*设置可行项数据表{{*/
var setdbsheet = function(wb){
	var sht;
	for (i=1; wb.sheets.count) {
		if (wb.sheets(i).name == _od_list_sht) {
				sht = wb.sheets(i);
				break;
		}
	}
	if !sht{
		sht = wb.sheets.add();
		sht.name = _od_list_sht;
	}
	else sht.usedrange.clear();
	return sht; 
}
/*}}*/

console.log("设置特性值数据表...", _od_list_sht)
var odsht = setdbsheet(wb);

var odtab = table.create(,{ fields = {[1] = "特性", [2] = "特性描述", [3] = "特性值", [4] = "特性值描述"}});


console.log("获取OD数据表...", _od_list_sht) 
var od = {};
var pd = {};

/*从所有页获取特性列表{{*/
for(i=1; wb.sheets.count){
	var sht = wb.sheets(i);
	if sht.name == _od_list_sht continue; 
	var keyCode = sht.cells(9,"A").value2;
	if !keyCode continue;
	if !string.indexOf(keyCode,"/") continue;
	var 可选项分类, 喷粉分类 = table.unpack(string.split(keyCode,"/"));
	var 特性列表 = db.getTable("SELECT 特性,更改标记 FROM `分类`", { 分类 : 可选项分类 });
	特性列表 = filterDeleted(特性列表);
	for (i=1; #特性列表)
		table.push(od, 特性列表[i].特性);
	var 颜色列表 = db.getTable("SELECT 喷粉部位编码,颜色分组 FROM `喷粉分类组成`", { 产品系列号 : 喷粉分类 });

	for (i=1; #颜色列表)
		table.push(pd, 颜色列表[i].颜色分组);
}
/*}}*/
/* 去除重复项 */
od = table.unique(od);
pd = table.unique(pd);

/*根据特性列表查找所有特性值并生成总表{{*/
for (i=1; #od){
	var tab = searchOption(od[i]);
	tab = tarray.sliceCol(tab,1,4);
	table.append(odtab, tab);
}
/*}}*/
console.log("获取颜色数据表...") 
var colortab = db.getTable("SELECT * FROM `颜色分组` Order By 颜色分组,默认颜色可选项类别 ASC");
var ctab = {}
ctab.fields = odtab.fields
/*颜色名称去除开头的专用号{{*/
var trimColorDesp = function(desp){
	if #desp<11 return desp;
	var d = string.match(desp, "^\d+");
	if d {
		d = string.trimleft(desp, d);
		d = string.trimleft(d);
		if string.startWith(d, "粉末")
			d = string.trimleft(d, "粉末");
		d = string.trimleft(d);
		return d; 
	}
	else return desp; 
}
/*}}*/

var 喷粉部分 = {
	[1] = "柜内颜色";
	[2] = "柜外颜色";
	[3] = "肩膀型材颜色";
	[4] = "侧板内板颜色";
	[5] = "机舱护板颜色";
	[6] = "侧板颜色";
	[7] = "装饰板颜色";
	[8] = "后护板颜色";
	[9] = "内部颜色";
	[10] = "外部颜色";
	[11] = "底饰板颜色";
	[12] = "顶饰板颜色";
}



/*生成颜色特性值总表{{*/
for(i=1; #colortab){
	table.push(ctab, { 
		特性 = colortab[i].颜色分组 , 
		特性描述 = "", 
		特性值 = colortab[i].默认颜色可选项类别, 
		特性值描述 = trimColorDesp(colortab[i].特性值描述)
	})
}
/*}}*/

/* 特性值总表合并 */
table.append(odtab, ctab);
/* 特性值总表写入数据sheet */
odsht.range("A1:D" ++ #odtab).value2 = tarray.serialize(odtab);
odsht.Visible = 0 /* xlSheetHidden  */


/*getRef从odsht获取地址填入下拉列表地址{{*/
var getRef = function(code){
	var t = table.filter(odtab,function(v, index){
		return v.特性描述 == code;
	});
	var min = table.indexOf(odtab, t[1]);
	if !min return null; 
	var max = min + #t -1;
	return "$D$" ++ min ++ ":$D$" ++ max; 
}
var getColorRef = function(pl /* 喷粉分类 */,bw /* 喷粉部位 */){
	
	var s = db.stepQuery("SELECT * FROM [喷粉分类组成]",{产品系列号:pl; 喷粉部位编码:bw})
	var pn = !s ? 1 : s.颜色分组; 
	var t = table.filter(odtab,function(v, index){
		return v.特性 == pn;
	});

	var min = table.indexOf(odtab, t[1]);
	if !min return null; 
	var max = min + #t -1;
	return "$D$" ++ min ++ ":$D$" ++ max; 
}
/*}}*/

/*
var getDefaultConfig = function(classCode, productCode){
	var t;
	if !productCode
		t = db.stepQuery("SELECT 产品编码 FROM [默认值]", {"分类":classCode});
	if !t return null; //返回的是对象不是数据, 不要用#
	productCode = t["产品编码"];
	t = db.getTable("SELECT * FROM [默认值]", {"分类":classCode; "产品编码":productCode});
	//console.dump(t) 
	return t; 
}
*/

var getDefaultValueText = function(tab,keyCode){
	tarray.findValue(arr, what)
}
for(i=1; wb.sheets.count){
	var sht = wb.sheets(i);
	if sht.name == _od_list_sht continue; 
	if (sht.Visible !== -1 /* xlSheetVisible  */) continue;
	
	var keyCode = sht.cells(9,"A").value2;
	if !keyCode continue;
	
	if !string.indexOf(keyCode,"/") continue;
	var 可选项分类, 喷粉分类 = table.unpack(string.split(keyCode,"/"));
	
	//var classCode = string.trim(sht.cells(9,"A").text);
	//DefaultConfig = getDefaultConfig(classCode);

	console.log("开始添加下拉菜单...", sht.name ) 
	for (k=10; sht.usedrange.rows.count){
		var code, codeAddress;
		
        var ocell = sht.Cells(k, 3 /* C */);
        ocell.Validation.Delete();
        //ocell.value2 = "";
        
		select(sht.Cells(k, 4 /* D */).value2) {
			case "SAP选项" {
				code = sht.Cells(k, 2 /* B */).value2;
				if !code continue;
				 codeAddress = getRef(code);
				//code = string.left(code, 4);
			}
			case "颜色选项" {
				code = sht.Cells(k, 2 /* B */).value2;
				if !code continue;
				var bw = table.indexOf(喷粉部分,code);
						
				bw = bw>9 ? "P"++bw : "P0"++bw;
				codeAddress = getColorRef(喷粉分类 /* 喷粉分类 */,bw /* 喷粉部位 */);
				//code = string.left(code, 4);
			}
		}
		if !code continue;
		if !codeAddress continue;

        ocell.Validation.Add(
        	/* xlValidateList */ 3,
        	/* AlertStyle */ null,
        	/* Operator */ null,
        	/* Formula1 */ "=" ++ _od_list_sht + "!" + codeAddress,
        );
/*
        if DefaultConfig {
            var index_code = tarray.indexOfCol(DefaultConfig, code, "特性");
            if !index_code continue; //没发现默认值就跳过
            var 此默认值 = DefaultConfig[index_code].特性值;
            index_code = tarray.indexOfCol(odtab, code, "特性");
            var 此默认值描述 = odtab[index_code].特性值描述;
            ocell.value2 = 此默认值描述;
        }
*/
	}
}
db.close();

console.pause(true);