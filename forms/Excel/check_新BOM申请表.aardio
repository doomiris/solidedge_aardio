import console; 
console.open();
import com.excel;
import tarray;
var excel = com.excel(false);
if !excel.ActiveWorkbook excel.Quit();

var sht = excel.ActiveSheet;
if !sht console.pause("需要重新执行");

import QHC;

var getUpLevel = function(currentLevel){
	return string.left(currentLevel, #currentLevel - 2) ++ string.right(currentLevel, 1) - 1;
}

var  getSubLevel = function(currentLevel){
	return string.left(currentLevel, 1) ++ string.left(currentLevel, #currentLevel - 1) ++ string.right(currentLevel, 1) + 1
}

if !sht.Columns("B:B").find("BOM项目") return error("不是新BOM申请表"); 
if !sht.Rows("4:4").find("相关性语句") return error("不是最新版申请表"); 
var etab = (function(){
		var fields = {
			"层级";  "BOM项目";  "项目类别";  "物料号";  "物料描述";  "单位用量";  "单位";  "排序文本";  "物料类型";  "相关性语句"
		};
		var etr = function(){
			for (i = sht.usedRange.Rows.Count -3 ; 5; -1){
				if (sht.cells(i,"A").value2) return i;
			}
		}
		
		if !etr() return error("找不到边界");
		
		var tab = {};
		var eArr = sht.Range("$A$5:$J$" ++ etr()).value2;
		for(i=1; #eArr; 1){    
	    	var d = table.array();
	    	for (j=1;#fields;1){
	    		d[fields[j]] = eArr[i][j];
	    		d["层级数"] = tonumber(string.trimleft(d["层级"], "."));
			}		
			table.push(tab,d);
		}
		return tab; 
})()

var etab_count = #etab;

var rule_desp = {
	[1] = "层级跳跃错误";
	[2] = "层级含非法字符或格式错误";
	[3] = "可选项上级组件不可配置";
	[4] = "配置件没有下挂可选项(借用组件可忽略, 但是别忘记维护下挂的特征类和默认配置)";
	[5] = "缺少单位用量或用量为0"; 
	[6] = "ROH不可有下级物料"; 
	[7] = "当前组件下有重复项";
	[8] = "当前物料已禁用";
	[9] = "单位错误";
	[10] = "此行之后有重复添加子项";
	[11] = "请核实高银焊条用量";
	[12] = "ZA单位对应数量不应该有小数";
	[13] = "SC下无粉末";
	[14] = "HALB无下挂(借用件可忽略)"; 
	[15] = "原材料用量错误";  //TODO
	[16] = "物料类型/单位与SAP内不一致"; 
	
}
var hasChild = function(z){
	if etab[z+1] return etab[z].层级数 < etab[z+1].层级数;
	else return false; 
}
var sapErr = {
	[1] = function(i){
		if (i == 1) return ; 
		var c_lv = tonumber(string.trimleft(etab[i].层级, "."))
    	var u_lv =  tonumber(string.trimleft(etab[i-1].层级, "."))
    	if (c_lv && u_lv)
    		if (c_lv > u_lv)
    			return ( (c_lv - u_lv) !== 1 ) ; 
	}
	[2] = function(i){
		var t = string.split(etab[i].层级,".");
		return (#t !== t[#t] + 1); 
	}
	[3] = function(i){
		if !etab[i].物料号 return ; 
		if !string.startWith(etab[i].物料号 ,"H00809") return ; 
		if (etab[i].物料类型 !== "KMAT" ) return ; 
		for (j=i-1; 5; -1){
			if (etab[j].层级数 == etab[i].层级数 - 1){
				if QHC.getSapItem(etab[j].物料号)
				return !(QHC.getSapItem(etab[j].物料号).物料组=="SG"); 
			}
		}
	}
	[4] = function(i){
		if !etab[i].物料号 return ; 
		if !string.startWith(etab[i].物料号 ,"H00808") return ; 
		if (etab[i].物料类型 !== "HALB" ) return ; 
		if !QHC.getSapItem(etab[i].物料号) return ; 
		if !(QHC.getSapItem(etab[i].物料号).物料是可配置的=="X") return ; 
		for (j=i+1; etab_count){
			if etab[j].层级数 <= etab[i].层级数  break ; 
			if etab[j].物料号 
				if string.startWith(etab[j].物料号, "H00809") 
					return false //当前组件下面发现09号时
		}
		return true; 
	}
	[5] = function(i){
		if etab[i].单位用量 return !(tonumber(etab[i].单位用量))
		else return true; 
	}
	[6] = function(i){
		if (i<etab_count)
			if (etab[i].物料类型 == "ROH")
				if etab[i+1] return (etab[i].层级数 < etab[i+1].层级数);
				
	}
	[7] = function(i){
		var t={};
		for (n=i+1; etab_count){
			if etab[n] {
				if (etab[n].层级数 == etab[i].层级数 + 1) {
					table.push(t,etab[n].物料号);				
				}
				if etab[n].层级数 <= etab[i].层级数 break;
			}
		} 
		return  #(table.unique(t)) !== #t;
	}
	[8] = function(i){
		var sapItem = QHC.getSapItem(etab[i].物料号);
		if sapItem return (sapItem.禁用 == "禁用");
		//else return true; 
	}
	[9] = function(i){
		return !table.find({"ZA","KG","M","ROL","BOT"}, string.upper(etab[i].单位));
	}
	[10] = function(i){
		//console.log(i, hasChild(i))
		if !hasChild(i) return; 
		var t = table.slice(etab, i+1, etab_count);
		var tx = tarray.getCol( t, "物料号" );
		var x = table.find(tx, etab[i].物料号);
		if x return hasChild(x+i) ;
	}
	[11] = function(i){
		if etab[i].物料号  == "H0088300011"
			return (etab[i].单位用量 > 0.1);  
	}
	[12] = function(i){
		if etab[i].单位  == "ZA"
			if !string.indexOf(etab[i].物料描述,"胶带")
				return !math.isInteger(tonumber(etab[i].单位用量));  
	}
	[13] = function(i){
		var sapItem = QHC.getSapItem(etab[i].物料号);
		if !sapItem return; 
		if sapItem.物料组 == "SC" {
			if !hasChild(i) return;
			var t={};
			for (n=i+1; etab_count){
				if etab[n] {
					if (etab[n].层级数 == etab[i].层级数 + 1) {
						table.push(t,etab[n].物料号);
					}
					if etab[n].层级数 <= etab[i].层级数 break;
				}
			} 
			return !table.indexOf(t,"H0088200085"); 
		}
	}
	[14] = function(i){
		if !etab[i].物料号 return ; 
		if (etab[i].物料类型 !== "HALB" ) return ; 
		return !hasChild(i);
	}
	[15] = function(i){
		return false; //TODO
	}
	[16] = function(i){
		var sapItem = QHC.getSapItem(etab[i].物料号);
		if !sapItem return; 
		if etab[i].单位 !== sapItem.BUn return true;
		if etab[i].物料类型 !== sapItem.MTyp return true;
	}

};


import console.progress;
var bar = console.progress();

var getErr = {};

for(i=1; etab_count){
	bar.setProgress(math.round(i*100/etab_count), math.round(i*100/etab_count) + "% processing......");
	for(j=1; #sapErr){		
		if sapErr[j](i)
			table.push(getErr, {errRow=i; errRule=j})
	}
}

for(i=1; #getErr){
	console.log("第" ++ (getErr[i].errRow + 4) ++ "行, " ++ etab[getErr[i].errRow].物料号, rule_desp[getErr[i].errRule]);
}

console.pause(true);