import win.ui;
/*DSG{{*/
var chk_excel_BOM_REV_form = win.form(text="检查BOM更改单";right=759;bottom=400)
chk_excel_BOM_REV_form.add(
button={cls="button";text="开始";left=9;top=6;right=137;bottom=47;default=1;dl=1;dt=1;tabstop=1;z=1};
checkbox={cls="checkbox";text="自动修复部分简单错误";left=593;top=41;right=744;bottom=59;checked=1;color=16711680;dr=1;dt=1;tabstop=1;transparent=1;z=5};
combobox2={cls="combobox";left=146;top=16;right=749;bottom=42;dl=1;dr=1;dt=1;edge=1;items={};mode="dropdownlist";tabstop=1;z=3};
listview={cls="listview";left=0;top=60;right=760;bottom=369;ah=1;db=1;dl=1;dr=1;dt=1;edge=1;fullRow=1;gridLines=1;z=2};
progress={cls="progress";left=0;top=370;right=760;bottom=400;db=1;dl=1;dr=1;edge=1;max=100;min=0;z=4}
)
/*}}*/

import tarray;
import com.excel;
import string.keywords;
import config;
import fsys.table;
import QHC;
import domisoft;
import inet.http;

chk_excel_BOM_REV_form.bindConfig( config.checkGUI, {	//绑定控件值
    checkbox = "checked";
} );


	import console
	//console.open()

var excel_0 = com.excel(false);
var excel_2;
var getErr = {};

com.enumRunning( 
	function(displayName,object){
		try{
			var s = com.GetTypeInfo(object).GetDocumentation().name;
			if s = "_Workbook"
				if string.keywords('更改|BOM|变更').findOne(displayName)
					chk_excel_BOM_REV_form.combobox2.add(displayName);
		}
	}
)


if chk_excel_BOM_REV_form.combobox2.count {
	var findActiveWB
	if excel_0.ActiveWorkbook
		findActiveWB = table.indexOf(chk_excel_BOM_REV_form.combobox2.items, excel_0.ActiveWorkbook.Name)
	chk_excel_BOM_REV_form.combobox2.selIndex = findActiveWB ? findActiveWB : 1;
}
var etab = {};
var sht;
var formRng;
chk_excel_BOM_REV_form.button.oncommand = function(id,event){
	if !#chk_excel_BOM_REV_form.combobox2.selText return ; 	

	sht = domisoft.getRunningWorkSheet(chk_excel_BOM_REV_form.combobox2.selText)
	excel_2 = sht.Parent.Application;
	var workbook_name = sht.Parent.Name;
	var od_sht = sht.Parent.Sheets.Item("销售语句");
	etab = (function(){
			var fields = {
				"原父项"; "原子项"; "原子项描述"; "原子项数量"; "原子项单位"; "原子项类型"; "更改备注";
				"新父项"; "BOM项目"; "项目类别"; "新子项"; "新子项描述"; "新子项数量"; "新子项单位"; "新子项类型";
				"是否继承";	"继承生效日期";	"是否有OD";
	
			};
	
			var etr = function(){
				var f = sht.usedrange.find("B2907F02");
				return f.row - 1; 
			};
			
			if !etr() return error("找不到边界");
			
			var tab = {};
			formRng = sht.Range("$B$9:$S$" ++ etr());
			var eArr = formRng.value2;
			for(i=1; #eArr){    
	    		var d = table.array();
	    		for (j=1;#fields){
	    		    if eArr[i][j]
	    		    	if string.len(eArr[i][j])
	    					d[fields[j]] = eArr[i][j];
				}		
				table.push(tab,d);
			}
			for k, v in tab
				v = tarray.trimAll(v)
			tab.fields = fields;
			return tab; 
	})();
	
	var etab_count = #etab;
	
	var pcodeOffset = function(pcode, offset = 1){
		if !pcode return ;
		pcode = string.trimleft(pcode, "H00");
		pcode = tonumber(pcode) + offset;
		return "H00" ++ pcode;  
	}
	

//var rule_path = io.joinpath(config.dbServer.path, "Rules");
//var rule_file = io.joinpath(rule_path, "Rule_BOM更改单.aardio");

//var rule_desp, top_rule_desp, sapErr, solver, top_rule_err, top_rule_solver;

/*RULES_DESP{{*/

var rule_desp = {
	[1] = "前后父项物料不匹配(不要改变原有模版公式)";
	[2] = "项目类别固定值:L";
	[3] = "新增子项:子项需写在右侧";
	[4] = "删除子项:子项需写在左侧";
	[5] = "更改用量:前后相同";
	[6] = "用量:小数位数不超过3位 (手动删除或使用round函数, 直接调整显示状态也不行)";
	[7] = "检查单位是否正确,ZA单位对应数量一般是整数, KG/M允许有小数";
	[8] = "物料类型/单位与SAP内不一致/新号可能未生效请确认"; 
	[9] = "ROH不可有下级物料"; 
	[10] = "单位用量错误: 非数字/没填/0值"; 
	[11] = "给09组新增子项时确认是否有OD"; 
	[12] = "父项物料被禁用, 请先申请解禁再更改BOM";
	[13] = "子项物料被禁用, 请先申请解禁再更改BOM";
	[14] = "相同内容重复操作(在此行之前有重复项,检查此行之前的条目)";
	[15] = "缺少更改备注";
	[16] = "操作KMAT请标记出是否有OD变更, 如OD不变可忽略";
	[17] = "请移除空行(末尾空行可忽略)";
	[18] = "替换子项前后无区别";
	[19] = "已喷物料和未喷物料号码相隔太远(如特殊情况请确认是否可忽略)";
	[20] = "删除子项:右侧新子项需要留空";
	[21] = "子项物料与父项相同";
	[22] = "可选项子项数量只能是1"; //K3规则SAP不再限制了
	/* 此处增加规则需要在desp/rule/solver三处都添加子项 */
}
var top_rule_desp = {
	[1] = "涉及语句变更的, 文件名部分需要指定:-是-否";
	[2] = "[第二页]新增的特性值描述不能超过30个字符";
}
/*}}*/
	
/*RULES{{*/
var sapErr = {
	[1] = function(i){
		if etab[i][["原父项"]]
			return etab[i][["原父项"]] !== etab[i][["新父项"]]; 
	};
	[2] = function(i){
		if etab[i].原父项
			return etab[i][["项目类别"]] !== "L"; 
	};
	[3] = function(i){
		if etab[i][["更改备注"]] == "新增子项" or etab[i][["更改备注"]] == "新增BOM"
			return #etab[i][["原子项"]] and !#etab[i][["新子项"]];
	};
	[4] = function(i){
		if etab[i][["更改备注"]] =="删除BOM" or etab[i][["更改备注"]] =="删除子项"
			return !#etab[i][["原子项"]] and #etab[i][["新子项"]];
	};
	[5] = function(i){
		if etab[i][["更改备注"]] == "更改用量"
			return etab[i][["原子项数量"]] == etab[i][["新子项数量"]]; 
	};
	[6] = function(i){
		if etab[i][["更改备注"]] =="删除BOM" or etab[i][["更改备注"]] =="删除子项" return;
		var n = tarray.cNum(etab[i][["新子项数量"]]);
		var a = string.split(tostring(n),".");
		if #a>1
			return #a[2]>3; 
	};
	[7] = function(i){
		if etab[i][["更改备注"]] =="删除BOM" or etab[i][["更改备注"]] =="删除子项" return;
		if etab[i][["新子项单位"]]  == "ZA"
			if !string.indexOf(etab[i][["新子项描述"]],"胶带")
					return !math.isInteger(tarray.cNum(etab[i][["新子项数量"]]));  
	};
	[8] = function(i){
		if etab[i][["更改备注"]] =="删除BOM" or etab[i][["更改备注"]] =="删除子项" return; 
		if !etab[i][["新子项"]] return ; 
		var item = QHC.getSapItem(etab[i][["新子项"]]);
		return item[["MTyp"]] !== etab[i][["新子项类型"]] or item[["BUn"]] !== etab[i][["新子项单位"]]; 
	};
	[9] = function(i){
		if etab[i][["更改备注"]] =="新增子项" or etab[i][["更改备注"]] =="新增BOM" {
			var item = QHC.getSapItem(etab[i][["原父项"]]);
			return item[["MTyp"]] == "ROH"; 
		}
	};
	[10] = function(i){
		if !etab[i][["更改备注"]] or etab[i][["更改备注"]] =="删除BOM" or etab[i][["更改备注"]] =="删除子项" return;
		if !etab[i][["新子项"]] return ; 
		return !(tarray.cNum(etab[i][["新子项数量"]]))
	};
	[11] = function(i){
		
		if etab[i][["原父项"]] and string.startWith(etab[i][["原父项"]], "H00809")
			return etab[i][["是否有OD"]] !== "√"
	};
	[12] = function(i){	//仅检查禁用状态, 忽略新号问题
		var item = QHC.getSapItem(etab[i][["原父项"]]);
		return item[["禁用"]] =="禁用"
	};
	[13] = function(i){	//仅检查禁用状态, 忽略新号问题
		//if !#etab[i].新子项 return ; 
		var item = QHC.getSapItem(etab[i][["新子项"]]);
		return item[["禁用"]] =="禁用"
	};
	[14] = function(i){
		if i==1 return ; 
		if !etab[i][["原父项"]] return ; 
		for(j=1; i-1){
			if #etab[j][["原子项"]] and etab[j][["原父项"]] == etab[i][["原父项"]] and 
				etab[j][["原子项"]] == etab[i][["原子项"]]
						return true;
			if #etab[j][["新子项"]] and etab[j][["原父项"]] == etab[i][["原父项"]] and 
					etab[j][["新子项"]] == etab[i][["新子项"]]
						return true;
		}
	}
	[15] = function(i){
		if etab[i][["原父项"]]
			return !etab[i][["更改备注"]]; 
	}
	[16] = function(i){
		if etab[i][["原子项类型"]] == "KMAT" || etab[i][["新子项类型"]] == "KMAT"
			return !etab[i][["是否有OD"]]; 
	}
	[17] = function(i){
		if i<#etab
			if !etab[i][["原父项"]]
				return !etab[i][["新父项"]] || etab[i][["新父项"]] ==0
	}
	[18] = function(i){
		if etab[i][["更改备注"]] == "替换子项"
			return etab[i][["原子项"]] == etab[i][["新子项"]];

	}
	[19] = function(i){
		if etab[i][["更改备注"]] == "新增BOM"
			if etab[i][["新子项描述"]] and string.indexOf(etab[i][["新子项描述"]],"未喷")
				return etab[i][["原父项"]] !== pcodeOffset(etab[i][["新子项"]]);
	}
	[20] = function(i){
		if etab[i][["更改备注"]] == "删除子项" or etab[i][["更改备注"]] == "删除BOM"
				return !!etab[i][["新子项"]] or !!etab[i][["新子项描述"]] or !!etab[i][["新子项数量"]];
	}
	[21] = function(i){
		if etab[i][["原父项"]]
			return etab[i][["原父项"]] == etab[i][["新子项"]];
	}
	[22] = function(i){
		/* K3规则SAP不再限制了*/
	}
	
	
};

var solver = {	//解决方案
	[1] = function(i){
			etab[i]["新父项"] = "=B" ++ (i+8); //etab[i]["原父项"];			 
			return true; 
	}
	[2] = function(i){
		etab[i]["项目类别"] = "L"
		return true; 
	}
	[3] = function(i){
		var a = {"原子项"; "原子项描述"; "原子项数量"; "原子项单位"; "原子项类型"};
		var b = {"新子项"; "新子项描述"; "新子项数量"; "新子项单位"; "新子项类型"};
		for (j=1; #a)
			etab[i][a[j]], etab[i][b[j]] = etab[i][b[j]], etab[i][a[j]];
		return true; 
	}
	[4] = function(i){
		var a = {"原子项"; "原子项描述"; "原子项数量"; "原子项单位"; "原子项类型"};
		var b = {"新子项"; "新子项描述"; "新子项数量"; "新子项单位"; "新子项类型"};
		for (j=1; #a)
			etab[i][a[j]], etab[i][b[j]] = etab[i][b[j]], etab[i][a[j]];
		return true; 
	}
	[5] = function(i){}
	[6] = function(i){
		var n = tarray.cNum(etab[i][["新子项数量"]]);
		etab[i]["新子项数量"]  = math.round(n, 3);
		return true;
	}
	[7] = function(i){
		
	}
	[8] = function(i){
		
	}
	[9] = function(i){
		
	}
	[10] = function(i){
		
	}
	[11] = function(i){
		
	}
	[12] = function(i){
		
	}
	[13] = function(i){
		
	}
	[14] = function(i){
		
	}
	[15] = function(i){
		
	}
	[16] = function(i){
		
	}
	[17] = function(i){
		etab[i]["新父项"] =null;
		etab[i]["项目类别"] =null;		
		return true; 	
	}
	[18] = function(i){
		
	}
	[19] = function(i){
		
	}
	[20] = function(i){
		
	}
	[21] = function(i){
		
	}
	[22] = function(i){
		/* K3规则SAP不再限制了*/
	}
};
var top_rule_err = {
	[1] = function(){	
		var col_c = od_sht.usedrange.columns("C").value2;
		col_c = table.filter(col_c, λ(v, index) #v);			
		var od_added = (#col_c !== 4)
		return !string.indexOf(workbook_name,"-是-") == od_added;
	}
	[2] = function(){		
		var col_e = od_sht.usedRange.Columns("E").value2;
		for (i=1; #col_e){
			if !col_e[i][[1]] continue;
			if col_e[i][[1]] == "特性" break;
			if string.len(col_e[i][[1]])>30 return true; 
		}	
	}
}
var top_rule_solver ={
	[1] = function(){
	}
	[2] = function(){
	}
}

/*}}*/
	
	

	var bar = chk_excel_BOM_REV_form.progress;
	bar.min = 0;
	bar.max = etab_count;
	getErr = {};
	getErr.fields = {"行"; "相关物料号";"错误描述"; "自动纠正"}
	var allowfix = chk_excel_BOM_REV_form.checkbox.checked;
	for(i=1; etab_count){		
		bar.pos = i;
		for(j=1; #sapErr){
			if sapErr[j](i)
				table.push(getErr, {
				"行":i+8;
				"相关物料号": " "; /*etab[i].原父项;*/
				"错误描述": rule_desp[j];
				"自动纠正": solver[j](i) and allowfix  ? "此条已修正, 请再次检查确认" :""
			})
		}
	}
	for(j=1; #top_rule_err){
		if top_rule_err[j]()
			table.insert(getErr, {
			"行":1;
			"相关物料号": " "; /*etab[i].原父项;*/
			"错误描述": top_rule_desp[j];
			"自动纠正": top_rule_solver[j]() and allowfix ? "此条已被自动修正" :""
		})
	}

	if chk_excel_BOM_REV_form.checkbox.checked {
		//console.dump(etab)
		var t = tarray.serialize(etab);
		t = tarray.fillEmptyRow(t);	
		formRng.value2 = t
/**
		for (i = 1; #etab)
			if etab[i][["原父项"]]{
				formRng.Cells(i+8, 9 /* I */).NumberFormat="General";
				formRng.Cells(i+8, 9 /* I */).Formula = "=B"++ (i++8);}
**/
	}
		
	chk_excel_BOM_REV_form.listview.setTable(getErr);
	
	chk_excel_BOM_REV_form.listview.setColumn({cx=30 ;fmt=0x2/*_LVCFMT_CENTER*/},1);
	chk_excel_BOM_REV_form.listview.setColumn({cx=120 ;fmt=0x2/*_LVCFMT_CENTER*/},2);
    chk_excel_BOM_REV_form.listview.fillParent(3);
	
}
chk_excel_BOM_REV_form.onDestroy = function(){
	try{
   		if excel_0 excel_0.alerts = true;    //防止意外关闭后Excel假死
   		if excel_2 excel_2.alerts = true;    //防止意外关闭后Excel假死
	}
}

/*点击定位{{*/
chk_excel_BOM_REV_form.listview.onSelChanged = function(selected,item,subItem,nmListView){
	if !selected return ; 
	if !item return ;
	var row = owner.getItemText(item,1);
	if row
		excel_2.ActiveWindow.ScrollRow = row;
}
/*}}*/

/*右键菜单{{*/
chk_excel_BOM_REV_form.listview.onnotify = function(id,code,ptr){
	select(code) {
    	case 0xFFFFFFFB/*_NM_RCLICK*/ {
    		var selectedRow = owner.getSelection();
    		if !selectedRow return ; 
			var x,y = win.getMessagePos();
		
			var menu = win.ui.popmenu(chk_excel_BOM_REV_form);			
			menu.add("隐藏可忽略项", function(){
				var t = table.filter(getErr,
					function(v,index){
						return !string.indexOf(v["错误描述"], "可忽略"); 
					}
				);
				t.fields = getErr.fields;
				chk_excel_BOM_REV_form.listview.setTable(t);
			});
			menu.add("显示可忽略项", λ() chk_excel_BOM_REV_form.listview.setTable(getErr));
			menu.popup(x,y,true);
    	}
    }
}
/*}}*/
/* CTRLC复制模块 */
chk_excel_BOM_REV_form.listview.translateAccelerator = domisoft.ctrlC;


chk_excel_BOM_REV_form.show();

win.loopMessage();
return chk_excel_BOM_REV_form;