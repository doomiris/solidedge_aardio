import win.ui;
/*DSG{{*/
var winform = win.form(text="检查BOM更改单";right=759;bottom=400)
winform.add(
button={cls="button";text="开始";left=9;top=6;right=137;bottom=47;default=1;dl=1;dt=1;tabstop=1;z=1};
checkbox={cls="checkbox";text="自动修复部分简单错误";left=593;top=41;right=744;bottom=59;checked=1;color=16711680;dr=1;dt=1;tabstop=1;transparent=1;z=5};
combobox2={cls="combobox";left=146;top=16;right=749;bottom=42;dl=1;dr=1;dt=1;edge=1;items={};mode="dropdownlist";tabstop=1;z=3};
listview={cls="listview";left=0;top=60;right=760;bottom=369;ah=1;db=1;dl=1;dr=1;dt=1;edge=1;fullRow=1;gridLines=1;z=2};
progress={cls="progress";left=0;top=370;right=760;bottom=400;db=1;dl=1;dr=1;edge=1;max=100;min=0;z=4}
)
/*}}*/

import tarray;
import com.excel;
import string.keywords;
import config;
import fsys.table;
import QHC;
import domisoft;
import inet.http;

winform.bindConfig( config.checkGUI, {	//绑定控件值
    checkbox = "checked";
} );


	import console
	//console.open()

var excel_0 = com.excel(false);
var excel_2;
var getErr = {};
winform.frmReLoad = function(){
	winform.combobox2.clear();
	com.enumRunning( 
		function(displayName,object){
			try{
				var s = com.GetTypeInfo(object).GetDocumentation().name;
				if s = "_Workbook"
					if string.keywords('更改|BOM|变更').findOne(displayName)
						winform.combobox2.add(displayName);
			}
		}
	)
	if winform.combobox2.count {
		var findActiveWB;
		excel_0 = com.excel(false);
		if excel_0.ActiveWorkbook
			findActiveWB = table.indexOf(winform.combobox2.items, excel_0.ActiveWorkbook.Name)
		winform.combobox2.selIndex = findActiveWB ? findActiveWB : 1;
	}
}
winform.frmReLoad();
winform.combobox2.onDropDown = winform.frmReLoad;

var etab = {};
var sht;
var formRng;
global.import("rules");
winform.button.oncommand = function(id,event){
	if !#winform.combobox2.selText return ; 	

	sht = domisoft.getRunningWorkSheet(winform.combobox2.selText)
	excel_2 = sht.Parent.Application;
	var workbook_name = sht.Parent.Name;
	var od_sht = sht.Parent.Sheets.Item("销售语句");
	etab = (function(){
			var fields = {
				"原父项"; "原子项"; "原子项描述"; "原子项数量"; "原子项单位"; "原子项类型"; "更改备注";
				"新父项"; "BOM项目"; "项目类别"; "新子项"; "新子项描述"; "新子项数量"; "新子项单位"; "新子项类型";
				"是否继承";	"继承生效日期";	"是否有OD";
	
			};
	
			var etr = function(){
				var f = sht.usedrange.find("B2907F02");
				return f.row - 1; 
			};
			
			if !etr() return error("找不到边界");
			
			var tab = {};
			formRng = sht.Range("$B$9:$S$" ++ etr());
			var eArr = formRng.value2;
			for(i=1; #eArr){    
	    		var d = table.array();
	    		for (j=1;#fields){
	    		    if eArr[i][j]
	    		    	if string.len(eArr[i][j])
	    					d[fields[j]] = eArr[i][j];
				}		
				table.push(tab,d);
			}
			for k, v in tab
				v = tarray.trimAll(v)
			tab.fields = fields;
			return tab; 
	})();
	
	var etab_count = #etab;
	
	var bar = winform.progress;
	bar.min = 0;
	bar.max = etab_count;
	getErr = {};
	getErr.fields = {"行"; "相关物料号";"错误描述"; "自动纠正"}
	var allowfix = winform.checkbox.checked;
	for(i=1; etab_count){		
		bar.pos = i;
		for(j=1; #rules.sapErr){
			if !rules.sapErr[j] win.msgbox(j);
			if rules.sapErr[j](i, etab) { // 传递 etab 参数
				table.push(getErr, {
					"行":i+8;
					"相关物料号": " "; /*etab[i].原父项;*/
					"错误描述": rules.rule_desp[j]; 
					"自动纠正": rules.solver[j] and allowfix ? (rules.solver[j](i, etab) ? "此条已修正, 请再次检查确认" : "") : ""
	
				})
			}
		}
	}
	for(j=1; #top_rule_err){
		if top_rule_err[j]()
			table.insert(getErr, {
			"行":1;
			"相关物料号": " "; /*etab[i].原父项;*/
			"错误描述": rules.top_rule_desp[j];
			"自动纠正": rules.top_rule_solver[j](od_sht, workbook_name) and allowfix ? "此条已被自动修正" :""
		})
	}

	if winform.checkbox.checked {
		//console.dump(etab)
		var t = tarray.serialize(etab);
		t = tarray.fillEmptyRow(t);	
		formRng.value2 = t
/**
		for (i = 1; #etab)
			if etab[i][["原父项"]]{
				formRng.Cells(i+8, 9 /* I */).NumberFormat="General";
				formRng.Cells(i+8, 9 /* I */).Formula = "=B"++ (i++8);}
**/
	}
		
	winform.listview.setTable(getErr);
	
	winform.listview.setColumn({cx=30 ;fmt=0x2/*_LVCFMT_CENTER*/},1);
	winform.listview.setColumn({cx=120 ;fmt=0x2/*_LVCFMT_CENTER*/},2);
    winform.listview.fillParent(3);
    

   	if excel_0 excel_0.alerts = true;    //防止意外关闭后Excel假死
   	if excel_2 excel_2.alerts = true;    //防止意外关闭后Excel假死
    sht = null;
    excel_2 = null;
    excel_0 = null;
    collectgarbage("collect");
	
}

/*点击定位{{*/
winform.listview.onSelChanged = function(selected,item,subItem,nmListView){
	if !selected return ; 
	if !item return ;
	var row = owner.getItemText(item,1);
	if !row return ; 
	sht = domisoft.getRunningWorkSheet(winform.combobox2.selText);
	if !sht return ; 
	excel_2 = sht.Parent.Application;
	excel_2.ActiveWindow.ScrollRow = row;
	sht = null;
	excel_2 = null;
}
/*}}*/

/*右键菜单{{*/
winform.listview.onnotify = function(id,code,ptr){
	select(code) {
    	case 0xFFFFFFFB/*_NM_RCLICK*/ {
    		var selectedRow = owner.getSelection();
    		if !selectedRow return ; 
			var x,y = win.getMessagePos();
		
			var menu = win.ui.popmenu(winform);			
			menu.add("隐藏可忽略项", function(){
				var t = table.filter(getErr,
					function(v,index){
						if v["错误描述"]
							return !string.indexOf(v["错误描述"], "可忽略"); 
					}
				);
				t.fields = getErr.fields;
				winform.listview.setTable(t);
			});
			menu.add("显示可忽略项", λ() winform.listview.setTable(getErr));
			menu.popup(x,y,true);
    	}
    }
}
/*}}*/
/* CTRLC复制模块 */
winform.listview.translateAccelerator = domisoft.ctrlC;


winform.show();

win.loopMessage();
return winform;