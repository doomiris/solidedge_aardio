//QHC
import sqlite;
import config;

var table = ..table;
var string = ..string;
var math = ..math;
var config = ..config;
var io = ..io;
namespace QHC;

sap_db_path = io.joinpath(config.dbServer.path, "QHCSAP.db");
od_db_path = io.joinpath(config.dbServer.path, "qhc_OD_lib.db");
drw_rel_path = io.joinpath(config.dbServer.path, "qhc_dw_rel_list.db");
product_info_path = io.joinpath(config.dbServer.path, "qhc_product_info_lib.db");

var rawTab = {
	[1] =	{["厚度"]=0.5; ["物料"] = "H0087500182-G"; ["物料描述"] = "定尺料组 热锌板 0.5*1250*C"; ["价格"] = 6.44};
	[2] =	{["厚度"]=0.6; ["物料"] = "H0087500185-G"; ["物料描述"] = "定尺料组 热锌板 0.6*1250*C"; ["价格"] = 6.32};
	[3] =	{["厚度"]=0.7; ["物料"] = "H0087500186-G"; ["物料描述"] = "定尺料组 热锌板 0.7*1250*C"; ["价格"] = 6.28};
	[4] =	{["厚度"]=0.8; ["物料"] = "H0087500191-G"; ["物料描述"] = "定尺料组 热锌板 0.8*1250*C"; ["价格"] = 6.15};
	[5] =	{["厚度"]=1.0; ["物料"] = "H0087500284-G"; ["物料描述"] = "定尺料组 热锌板 1.0*1250*C"; ["价格"] = 6.03};
	[6] =	{["厚度"]=1.2; ["物料"] = "H0087500193-G"; ["物料描述"] = "定尺料组 热锌板 1.2*1250*C"; ["价格"] = 6.03};
	[7] =	{["厚度"]=1.5; ["物料"] = "H0087500188-G"; ["物料描述"] = "定尺料组 热锌板 1.5*1250*C"; ["价格"] = 6.03};
	[8] =	{["厚度"]=2.0; ["物料"] = "H0087500190-G"; ["物料描述"] = "定尺料组 热锌板 2.0*1250*C"; ["价格"] = 6.03};
	[9] =	{["厚度"]=0.4; ["物料"] = "H0080154856-G"; ["物料描述"] = "定尺料组 热锌板 0.4*1250*C"; ["价格"] = 6.72};
	["X"] =	{ ["物料"] = ""; ["物料描述"] = "厂内无此规格"; ["价格"] = 7};
	["白色"] =	{["物料"] = "H0088200085"; ["物料描述"] = "标准白色"; ["价格"] = 14.88}
}

class 下料尺寸{
	ctor( size_str ){
		if !size_str return; 

		size_str = string.replace(string.lower(size_str),"x","*");
		if !string.indexOf(size_str,"*") return ; 
		precision = 3;
		var s = string.split(size_str,"*");
		
		for (i=1; #s)
			s[i] = tonumber(s[i]);
			
		table.sort(s);
		table.reverse(s);

		this.l = s[1];
		this.w = s[2];
		this.t = s[3];
		
		/* 粉末密度  2022/2/7 更新 */
		/* 双面喷粉: 2  单面喷粉1.3 */
		var m = this.l * this.w * 2 * 0.191 / 0.9 / 1E+6;
		
		/* FOAMING TODO 
		
		foam.m = foam.net * foam.density
		foam.density = 42.7
		foam.bscale = 1.15 
		
		foam.weight_white = m / (1 + bscale);
		foam.weight_black = 1.15 * weight_white;
		
		foam.material_white ="H0080300487";
		foam.material_black ="H0088200013";
		
		*/
		/* 工时成本 */
		// labour = 114.5 /* 元/小时 */
		
		this.powder = (m<0.001) ? 0.001 : math.round(m, precision);
		this.powderItem =  rawTab["白色"] ;
		/* 
			钣金:
			利用率93.31%标准计算，密度7.85，最终结果保留3位小数  2021.12.13 更新
			原材料价格上涨 2021/12/30
		 */
		var n = this.l * this.w * this.t * 7.85 / 0.9331 / 1E+6;
		this.metel = (n<0.001) ? 0.001 : math.round(n, precision);
		this.raw = (function(t){
			var tab = table.filter(rawTab, function(v,index){
				return  (v.厚度==t);
			})
			
			if !#tab return rawTab["X"] ; 
			else return tab[1]; 
		})(this.t)
	};
}
class 发泡料用量{
	ctor( size_str ){
		if !size_str return; 
		precision = 3;
		
		size_str = string.replace(string.lower(size_str),"x","*");
		
		if string.indexOf(size_str,"*") { 
			var s = string.split(size_str,"*");
			this.l = tonumber(s[1]);
			this.w = tonumber(s[2]);
			this.t = tonumber(s[3]);
			this.volumn = this.l * this.w * this.t / 1E+9;
		}
		else { //如果不含星号时按vol计算
			if math.isFinite(size_str)
				this.volumn = size_str / 1E+9;
		}
		

		/* 
			总重量M=体积*42.7kg/m3，其中黑料异氰酸酯/白料组合聚醚=1.15:1
		 */
		this.density = 42.7 /* kg/m3 */;
		this.proportion = 1.15 /* 黑料异氰酸酯:白料组合聚醚 */;

		this.mass = this.volumn * this.density;

		this.white = math.round( this.mass * 1 / (1 + this.proportion), precision );
		this.black = math.round( this.mass * this.proportion / (1 + this.proportion), precision );

		this.raw =  {
			white = "H0080300487";
			black = "H0088200013";
		};
	};
}

openDb = function(path){
	return ..sqlite(path,,1/*_SQLITE_OPEN_READONLY*/);
}
getColDef =function(){
	var db,err = openDb(sap_db_path);
	var t = db.prepare("SELECT * FROM [所有物料]");
	return t.getColumns(); 
}
getProductDef =function(){
	var db,err = openDb(product_info_path);
	var t = db.prepare("SELECT * FROM [base]");
	return t.getColumns(); 
}
getRawItem =function(size_str){
		if !size_str return; 
		size_str = string.replace(string.lower(size_str),"x","*");
		if !string.indexOf(size_str,"*") return ; 

		var s = string.split(size_str,"*");
		
		for (i=1; #s)
			s[i] = tonumber(s[i]);
			
		table.sort(s);
		table.reverse(s);

		var rawItem = (function(t){
			var tab = table.filter(rawTab,function(v,index){
				return  (v.厚度==t);
			})
			
			if !#tab return rawTab["X"] ; 
			else return tab[1]; 
		})(s[3]);
		return rawItem;	
}
getSapItem = function(hcode){
	//import console;
	//console.log(sap_db_path, hcode)
	var db,err = openDb(sap_db_path);
	if !hcode return null;
	if type(hcode)!=="string" return null; 
    if string.len(hcode) > 11
    	hcode = string.trim(hcode);
	var t = db.stepQuery("SELECT * FROM [所有物料]", { 物料 : hcode } )
	return t; 
};
getProductInfo = function(hcode){
	var db,err = openDb(product_info_path);
	if !hcode return null;
	if type(hcode)!=="string" return null; 
    if string.len(hcode) > 11
    	hcode = string.trim(hcode);
	var t = db.stepQuery("SELECT * FROM [base]", { 成品编码 : hcode } )
	return t; 
};
getSapItemByDesp = function(Desp){
	if !Desp return null; 
	var db,err = openDb(sap_db_path);
	Desp = string.replace(Desp, "*", "%");
	var symbol = string.indexOf(Desp, "%") ? "LIKE" : "=";
	var sqlstr = "SELECT * FROM [所有物料] WHERE [物料描述] " ++ symbol ++ " ?";
	var t = db.getTable (..sqlite.format( sqlstr, {Desp}));
	return t; 
};
GetBomColumn = function(sht){
	
}
class ColDefType{
	ctor( sht ){
		import string.keywords;
		import tarray;
		var rng = sht.Range("A1:Z10").value2; //只从前10层里查找
		var cell = tarray.findKeyWords(rng, "层级|层次|展开层");
		this.DefRow = cell.row;
		var rowArr = sht.Range("A" + cell.row + ":Z" + cell.row).value2;
		rowArr = table.pop(rowArr);
		this.LvlCol = cell.col;
		this.codeCol = table.find(rowArr, string.keywords("子项物料代码|专用号|物料代码|对象标识|子项物料|物料号|物料").findOne);
		this.DespCol = table.find(rowArr, string.keywords("物料名称|物料描述|对象描述").findOne);
		this.TypeCol = table.find(rowArr, string.keywords("物料属性|属性|物料类型|类型").findOne);
		this.QtyCol = table.find(rowArr, string.keywords("单位|组件单位").findOne);
		this.UnitCol = table.find(rowArr, string.keywords( "数量|单位用量|用量|组件数量|组件数量(CUn)").findOne);
	};
}

formatColor = function(UsedRange){
	UsedRange.formatConditions.Delete();   //清楚当前颜色
	//设置表格线
	import color;
	UsedRange.Borders.LineStyle = 1 /* xlContinuous */
	UsedRange.Borders.weight = 2 /* xlThin */
	//UsedRange.Borders.ColorIndex = 1
	UsedRange.Font.Name = "微软雅黑";
	UsedRange.Font.Size = 10;
	UsedRange.Interior.Color = color.rgb(255, 255, 255);
	
	//设置颜色
	var fConds = UsedRange.formatConditions;
	
	var addCond = function(rule,rgb){		
		var fmtCds = fConds.Add( 2 /* xlExpression */, ,rule);
		fmtCds.Interior.Color = color.rgb(table.unpack(rgb));
		fmtCds.Stopiftrue = false;
	}

	addCond("=($A1="".1"")",{0, 176, 80});
	addCond("=($A1=""..2"")",{79, 98, 40});
	addCond("=($A1=""...3"")",{118, 147, 60});
	addCond("=($A1=""....4"")",{196, 215, 155});
	addCond("=($A1="".....5"")",{216, 228, 188});
	addCond("=($A1=""......6"")",{235, 241, 222});
}


formatBOM = function(sht,savechanges = true){
	import com.excel;
	import console;
	var excel;
	if !sht {
		excel = com.excel(false);
		excel = excel.Application;
		sht = excel.ActiveWorkbook.ActiveSheet;
	}else{
		excel = sht.parent.Application;
	}

	if !sht return ; 
	var coldef = ColDefType(sht);
	if !coldef.DefRow return ; 

	excel.ScreenUpdating = false   //关闭屏幕刷新
	excel.EnableEvents = false //先禁止触发事件
	excel.Calculation = -4135 /* xlCalculationManual */    //手动重算
	
  	var UsedRange = sht.UsedRange;

	formatColor(UsedRange);

	import tarray;
	var cot = UsedRange.Columns(coldef.LvlCol).value2;
	cot = tarray.transpose(cot);

	if tarray.findString(cot, "0.1")
		UsedRange.Columns(coldef.LvlCol).Replace("0.1", "'.1");
	if tarray.findString(cot, "…")
		UsedRange.Columns(coldef.LvlCol).Replace("…", "...");
	
	//调整列宽和对齐方式
	sht.Columns(coldef.LvlCol).ColumnWidth = 6.5
	sht.Columns(coldef.LvlCol).HorizontalAlignment = -4131 /* xlLeft */

/*
	if (coldef.LvlCol + 1 !== coldef.codeCol)
		sht.Columns(coldef.LvlCol + 1).ColumnWidth = 5.5;
*/
	if coldef.codeCol {
		sht.Columns(coldef.codeCol).ColumnWidth = 14
		sht.Columns(coldef.codeCol).HorizontalAlignment = -4108 /* xlCenter */
	}
	if coldef.DespCol {
		sht.Columns(coldef.DespCol).AutoFit()
		sht.Columns(coldef.DespCol).HorizontalAlignment = -4131 /* xlLeft */
	}
	if coldef.TypeCol {
		sht.Columns(coldef.TypeCol).ColumnWidth = 8
		sht.Columns(coldef.TypeCol).HorizontalAlignment = -4108 /* xlCenter */
	}
	if coldef.QtyCol {
		sht.Columns(coldef.QtyCol).ColumnWidth = 8
		sht.Columns(coldef.QtyCol).HorizontalAlignment = -4108 /* xlCenter */
	}
	if coldef.UnitCol {
		sht.Columns(coldef.UnitCol).ColumnWidth = 8
		sht.Columns(coldef.UnitCol).HorizontalAlignment = -4108 /* xlCenter */	
	}

	var range_addr = UsedRange.Address();
	range_addr = string.replace(range_addr, "@$A$1", "$A$" ++ coldef.DefRow);
	if sht.ListObjects.Count {
		for (i=1;sht.ListObjects.Count){
			if sht.ListObjects.item(1).Name =="Table1" {
				sht.ListObjects("Table1").Unlist();
				break;
			}
		}
	}
	sht.ListObjects.Add(1 /* xlSrcRange */, sht.Range(range_addr), , 1 /* xlYes */).Name = "Table1";
	sht.ListObjects("Table1").TableStyle = "";
	sht.ListObjects("Table1").AutoFilter.ApplyFilter();

	excel.EnableEvents = true; //恢复触发事件
	excel.Calculation = -4105; /* xlCalculationAutomatic */   //自动重算
	excel.ScreenUpdating = true;   //开启屏幕刷新
	
	if savechanges	sht.Parent.Save();
}
formatAllBOM = function(){
	import com.excel;
	var excel = com.excel(false);
	for(i = excel.WorkBooks.Count; 1; -1) {// 反向
			formatBOM(excel.WorkBooks(i).WorkSheets(1))
		 	excel.WorkBooks(i).Close(true /* _save_changes */);
	}
}
getPriceList= function(){
	import com.excel;
	import config;
	var excel = com.excel(false);
	if !excel
		excel = com.GetOrCreateObject("Excel.Application");
	excel.alerts = false;
	
	import fsys.dlg;
	var fl = fsys.dlg.openEx("cost文件|cost_*.xlsx|.xlsx|*.xlsx",'请选择要打开的 cost 文件',config.__sapDownload)
	var tab = {};
	tab.fields = {"物料","物料描述","原材料","Labour","Burden","总价"};
	
	for (i = 1; #fl) {
    	var sht = excel.Workbooks.Open(
			fl[i] /* filename */,
			false /* UpdateLinks */,
			true /* ReadOnly */,
			/* format */,
			/* Password */,
			/* WriteResPassword */,
			/* IgnoreReadOnlyRecommended */,
			/* Origin */,
			/* Delimiter */,
			/* Editable */,
			/* Notify */,
			/* Converter */,
			/* AddToMru */,
			/* Local */,
			/* CorruptLoad */
		).Sheets(1);
		var t={}
		table.push(t,
    		sht.Cells(2, "B").Value,
    		sht.Cells(2, "C").Value,
    		sht.Cells(2, "G").Value,
    		sht.Cells(2, "H").Value,
    		sht.Cells(2, "I").Value,
    		sht.Cells(2, "J").Value,
    	)
    	sht.Parent.Close(false)
    	sht=null;
    	table.push(tab,t);
	}
	import tarray;
	tab = tarray.mapfields(tab);
	
	excel.alerts = true;
	if #tab
		return tab; 
}
getLvlStr = function(lvlNum){
	if type(lvlNum)=="string"
		lvlNum = tonumber(lvlNum);
	if lvlNum < 0 return "";
	var t = table.array(lvlNum,".");
	return  string.join(t,"") ++ lvlNum;
}

formatCostBom = function(sht){
	import  console;
	import tarray;
	var  singleJob  = false;
	import com.excel;
	var excel;
	if !sht {
		excel = com.excel(false);
		excel = excel.Application;
		sht = excel.ActiveWorkbook.ActiveSheet;
		singleJob = true
	}else{
		excel = sht.Parent.Application;
	}
	var uadr = sht.UsedRange.Address();
	var uadrs= string.split(uadr,"$");
	
	var end_row, end_col = table.pop(uadrs, -2);

	
	var UR = sht.Range("A6:" ++ end_col ++end_row );
	var etab = UR.value2;

	etab = tarray.clearEmptyRows(etab);

	var codeCol = tarray.findValue({etab[1]}, "物料").col;

//	sht.Columns(1).Numberformat = "@"   //解决.1层级被识别为数字的问题

	for (i = 2; #etab){
    	for (j = 2; codeCol - 1){
        	if etab[i][j]{
        	    etab[i][1] = getLvlStr(j - 2);
            	break 1;
        	}
    	}
	} 

	var fields = table.shift(etab);
	fields = tarray.trimAll(fields);
	fields[1] = "层级";
	etab.fields = fields;
	
	//var colCount = #fields;
	


	etab = tarray.fillEmptyRow(etab);

	for (j = #etab.fields; 1; -1){
    	if !etab.fields[j]{
    		etab = tarray.spliceCol(etab, j);
    	}
	}

	var wk = sht.Parent;
	var nsht = wk.Sheets.Add();
	//nsht.Activate(); //否则 不能调整列宽


	import etip;

	nsht.range("A1:" ++ etip.toColName(#etab.fields) ++ "1" ).value2 = etab.fields;
	nsht.range("A2:" ++ etip.toColName(#etab[1]) ++ (#etab+1) ).value2 = etab;
	formatBOM(nsht,false);
	
	wk.Application.DisplayAlerts = false;
	sht.delete();
	var nwk = string.replace(wk.FullName, "@.xls", ".xlsx");	
	wk.SaveAs(nwk, 51 /* xlWorkbookDefault */);
	
	wk.Application.DisplayAlerts = true;
	if !singleJob wk.Close(false);
	//..io.remove(wk.FullName);
}

formatAllCostBom = function(fl){
	//import console;
	if !ftab {
		import fsys.dlg;
		fl = fsys.dlg.openEx("cost源文件|cost_*.xls",'请选择要打开的 cost 文件',config.__sapDownload,parent)
	}
	
	import com.excel;
	var excel = com.excel(true);
	excel.alerts = false;
	
	for k, v in fl{
    	var sht = excel.Workbooks.Open(
			v /* filename */,
			false /* UpdateLinks */,
			true /* ReadOnly */,
			/* format */,
			/* Password */,
			/* WriteResPassword */,
			/* IgnoreReadOnlyRecommended */,
			/* Origin */,
			/* Delimiter */,
			/* Editable */,
			/* Notify */,
			/* Converter */,
			/* AddToMru */,
			/* Local */,
			/* CorruptLoad */
		).Sheets(1);
		//console.log(k, v, sht.name)
		formatCostBom(sht);
		
	}
	excel.alerts = true;
}
pcodeOffset = function(pcode, offset = 1){
	if !pcode return ;
	pcode = string.trimleft(pcode, "H00");
	pcode = tonumber(pcode) + offset;
	return "H00" ++ pcode;  
}
/**intellisense()
QHC.openDb(sap_db_path) = 返回DB
QHC.getSapItem(hcode) = 返回hitem\n!QHC_hitem.
QHC.getProductInfo(hcode) = 返回ProductInfo
QHC.getSapItemByDesp(desp) = 返回table
QHC.getSapItem() = 返回hitem\n!QHC_hitem.
QHC.getColDef() = 获取列名称数组
QHC.formatBOM(sheet) = 格式化SAP下载的BOM;
QHC.getRawItem(size_str) = 根据展开尺寸获取原材料项目\n!QHC_rawItem.
QHC.formatCostBom(sht) = 格式化成本BOM
QHC.formatAllCostBom(filelist) = 批量格式化成本BOM
QHC.formatAllBOM() = 批量格式化BOM
QHC.getPriceList() = 批量获取成本BOM价格列表
QHC.pcodeOffset(pcode, offset = 1) = 获取下一个号
!QHC_hitem.物料 = 物料
!QHC_hitem.物料描述 = 物料描述
!QHC_hitem.MTyp = 类型
!QHC_hitem.物料组 = 物料组
!QHC_hitem.BUn = 单位
!QHC_hitem.禁用 = 禁用
!QHC_hitem.价格 = 价格
!QHC_rawItem.厚度 = 厚度
!QHC_rawItem.物料 = 物料
!QHC_rawItem.物料描述 = 物料描述
!QHC_rawItem.价格 = 价格
end intellisense**/
/**intellisense(QHC.下料尺寸("__")())
l = 长
w = 宽
t = 厚度
metal = 钣金用量
raw = !板材原材料.
!板材原材料.物料 = 板材物料号
!板材原材料.物料描述 = 板材物料描述
!板材原材料.价格 = 板材价格
powder = 粉末用量
powderItem = !粉末原材料.
!粉末原材料.物料 = 粉末物料号
!粉末原材料.物料描述 = 粉末物料描述
!粉末原材料.价格 = 粉末价格
end intellisense**/