//SAP VM
import web.script;
var table = ..table;
var string = ..string;
var io = ..io;
/*
web.script 使用 ScriptControl 控件。
而 ScriptControl 加载的脚本每行最好保持在 1000 字以内。
ScriptControl 控件的不同版本每行字数上限在 1000 字到 2000 字以内是安全的，
稳妥的方法是保证每行在 1000 字以内.
*/
/*cityCode{{*/
var cityCode = {
	[1] = "北京",
	[2] = "上海",
	[3] = "天津",
	[4] = "内蒙古",
	[5] = "山西",
	[6] = "河北",
	[7] = "辽宁",
	[8] = "吉林",
	[9] = "黑龙江",
	[10] = "江苏",
	[11] = "安徽",
	[12] = "山东",
	[13] = "浙江",
	[14] = "江西",
	[15] = "福建",
	[16] = "湖南",
	[17] = "湖北",
	[18] = "河南",
	[19] = "广东",
	[20] = "海南",
	[21] = "广西",
	[22] = "贵州",
	[23] = "四川",
	[24] = "云南",
	[25] = "陕西",
	[26] = "甘肃",
	[27] = "宁夏",
	[28] = "青海",
	[29] = "新疆",
	[30] = "西藏",
	[32] = "重庆",
	[99] = ""
}
var getQhcCityCode = function(cityName){
	if !cityName return ""; 
	cityName = string.trimright(cityName, "省");
	cityName = string.trimright(cityName, "市");
	var index = table.find(cityCode, cityName);	
	return string.format("%02i0", index)
}

/*}}*/
namespace SAP;
class vm{
	ctor( ... ){
		this.instance = ...;
		this.ovm = ..web.script("VBScript");
		this.ovm.allowUi = true;
		this.ovm.script = /*
			dim instance
			instance = 0
			If Not IsObject(application) Then
   				Set SapGuiAuto  = GetObject("SAPGUI")
   				
   				Set application = SapGuiAuto.GetScriptingEngine
			End If
		*/
		if this.instance
			this.ovm.script.instance = tonumber(this.instance);
		this.ovm.script = /*
			on error resume next
			If Not IsObject(connection) Then
   				Set connection = application.Children(0)
			End If
			'If connection Is Nothing Then msgbox "请先启动SAP"
			on error goto 0
		*/
				
		if !this.ovm.script.connection return null;
		this.ovm.script = /*
			If Not IsObject(session) Then
   				Set session = connection.Children(CLng(instance))
			End If
		*/
		this.ovm.script = /*
			If IsObject(WScript) Then
   				WScript.ConnectObject session,     "on"
   				WScript.ConnectObject application, "on"
			End If
		*/
		this.Close = function(){
			this.ovm.script = /*
				If IsObject(WScript) Then
					WScript.DisconnectObject session
					WScript.DisconnectObject application
				End If
			*/
			this.ovm.script = /*
				Set session = Nothing
				Set connection = Nothing
				Set application = Nothing
				Set SapGuiAuto = Nothing
				If IsObject(WScript) Then WScript.Quit
			*/
		}
		..table.gc(this,"Close");
		this@ = _metaProperty;
	};
}

namespace vm{
	import util.metaProperty; 
	_metaProperty = util.metaProperty( 
	get = λ(k)  owner.ovm[k];
	set = function(k,v){
		owner.ovm[k] = v;
	};
 	busy = {
 		_get = function(){
			owner.ovm.script = /*
				dim busy
				busy = session.busy
			*/
			return !!owner.ovm.script.busy; 
 		}
 		_set = function(v){
 			v = !v ? 0 : 1;
 			owner.ovm.script= `session.busy=` ++ v;
 		}		
 	}
	findById = function(id_str, Raise){
		var proxy = {};
		var vm = owner.ovm;
		vm.script = /*
			dim id_str
			dim obj
			dim Raise
			dim text
		*/
		vm.script.id_str = id_str;
		vm.script.Raise = Raise;
		vm.script = /*
			'on error resume next
			set obj = session.findById(id_str,Raise)
			'on error goto 0
		*/
		proxy@ ={}
		proxy@._get = function(s){
			select(s) {
				case "select","press","sendVKey","StartTransaction" {
					return function(v){
						if v==null //注意0值
							vm.script = `obj.` + s;
						else
							vm.script = `obj.` + s + ` ` ++ v;
						
						
					}; 
				}
				case "text","selected","Text" {
					vm.script = `text = obj.` + s;
					return vm.script.text; 
				}

			}
		}
		proxy@._set = function(s,n){
			select(s) {
				case "text","selected","Text" {
					if !n return ; 
					vm.script = `obj.` + s + `= "` + n + `"`;
				}
			}
		}
		return proxy; 
	}
	title = {
		_get = λ() owner.findById("wnd[0]/titl").text; 
	}
	status = {
		_get = λ() owner.findById("wnd[0]/sbar/pane[0]").text; 
	}
	isHomepage ={
		_get = λ() owner.title == "SAP 轻松访问" || owner.title == "SAP Easy Access";
	}
	refresh = λ() owner.findById("wnd[0]/mbar/menu[0]/menu[5]").select();
	goBack = λ() owner.findById("wnd[0]/tbar[0]/btn[12]").press();
	exec = λ() owner.findById("wnd[0]/tbar[1]/btn[8]").press();
	saveAsName = {
		_get = λ() owner.findById("wnd[1]/usr/ctxtDY_FILENAME").text;
		_set = function(filename){owner.findById("wnd[1]/usr/ctxtDY_FILENAME").text = filename};

	} 
	saveAsFolder = {
		_get = λ() owner.findById("wnd[1]/usr/ctxtDY_PATH").text;
		_set = function(lib_path){owner.findById("wnd[1]/usr/ctxtDY_PATH").text = lib_path};
	} 
	saveAsOK = λ() owner.findById("wnd[1]/tbar[0]/btn[11]").press();
	saveAsCancel = λ() owner.findById("wnd[1]/tbar[0]/btn[12]").press();

	homepage = function(){
		while(!owner.isHomepage){
			owner.goBack();
			//owner.findById("wnd[1]/usr/btnSPOP-OPTION1").press()'不保存退出订单界面
		}
	};
	downloadBOM = function(winform, etab){
		import QHC;	
		import config;
    	import domisoft;
    	import console;
		var vm = owner;
		vm.homepage();
		vm.StartTransaction("ZMDM_001");

		var ftab = {};
		for (i = 1; #etab){
    		vm.findById("wnd[0]/usr/ctxtS_MATNR-LOW").text = etab[i];
    		vm.exec();
			var vt = QHC.getSapItem(etab[i]);
 			var filename;
 			if vt filename = vt.物料描述;    		
    		filename = string.replace(filename, " ", "_");
    		filename = etab[i] ++ "_" ++ filename ++ ".xlsx";
    		filename = domisoft.formatWindowsFileName(filename);
    		table.push(ftab, filename);
    		var fn = io.joinpath(config.__sapDownload,filename);
    		if io.exist(fn)
    			if !io.remove(fn)
    				console.debug("删除失败", fn);
    		if vm.status !== "无可用数据！" {
    			vm.findById("wnd[0]/tbar[1]/btn[9]").press(); //zmdm_001 里面的download
    			vm.saveAsName = filename;
    			vm.saveAsOK();
    			vm.goBack();
    			winform.publish("dok",filename);
    		}else{ //搜索不到时跳过,继续下一个
				vm.homepage();
				vm.StartTransaction("ZMDM_001");
    			continue;
    		}
		}
		vm.goBack();
		winform.publish("dok_list", ftab);
	};
	addPlantCodeMM03 = function(code = "0841"){
		var vm = owner;
		vm.findById("wnd[1]/usr/ctxtRMMG1-WERKS").text = code;
		vm.findById("wnd[1]/tbar[0]/btn[0]").press();	
	};
	addPlantCodeCS12 = function(code = "0841",wnd = "0"){
		var vm = owner;
		vm.findById("wnd[0]/usr/ctxtRC29L-WERKS").text = code;
		vm.findById("wnd[0]/usr/ctxtRC29L-CAPID").text = "PP01";
		var txt = vm.findById("wnd[0]/usr/ctxtRC29L-CAPID").text;
		if txt and string.len(txt)
			vm.findById("wnd[0]/tbar[1]/btn[8]").press();	
	};
	addPlantCodeCS15 = function(code = "0841",wnd = "0"){
		var vm = owner;
		vm.findById("wnd[0]/usr/ctxtRC29L-WERKS").text = code;
		vm.findById("wnd[0]/tbar[1]/btn[8]").press();
	};
	addReciptAddr = function(code = "0841",wnd = "1"){
		var vm = owner;
		import config;
		var settings = config.settings;
		vm.findById("wnd[1]/usr/txtADDR1_DATA-NAME1").Text = settings.editRec;
		vm.findById("wnd[1]/usr/txtADDR1_DATA-SORT1").Text = settings.editRec;
		vm.findById("wnd[1]/usr/txtADDR1_DATA-STREET").Text = string.match(settings.editRoad,"^[^\d]+");
		vm.findById("wnd[1]/usr/txtADDR1_DATA-HOUSE_NUM1").Text =  string.match(settings.editRoad,"\d+");
		vm.findById("wnd[1]/usr/txtADDR1_DATA-POST_CODE1").Text = "";
		vm.findById("wnd[1]/usr/txtADDR1_DATA-CITY1").Text = settings.editDistict;
		vm.findById("wnd[1]/usr/ctxtADDR1_DATA-COUNTRY").Text = "CN";
		vm.findById("wnd[1]/usr/ctxtADDR1_DATA-REGION").Text = getQhcCityCode(settings.editCity);
		vm.findById("wnd[1]/usr/txtSZA1_D0100-MOB_NUMBER").Text = settings.editMobile;
		vm.findById("wnd[1]/tbar[0]/btn[8]").press();//检查地址按钮
		vm.findById("wnd[2]/tbar[0]/btn[0]").press();//关闭检查结果通知
		
	};
	_topointer = lambda() owner.ovm;	
);
}
/**intellisense()
SAP.vm = SAP VM
SAP.vm() = VM库\n!vm.
end intellisense**/

/**intellisense(!vm)
? = 在此添加更多说明
Close() = 断开与SAP连接
homepage() = 返回首页
findById() = 返回GuiComponent\n!GuiComponent.
findById(__) = 查找ID返回GuiComponent @参数1 指定id字符串
StartTransaction(tcode) = 在首页开启事务Calling this function with parameter "xyz" has the same effect as SendCommand("/nxyz").
downloadBOM(winform, etab) = 下载BOM
FindByPosition() = !GuiComponent.
FindByPosition(X,Y,Raise) = This method can be used to do a hittest on an SAP GUI session. The parameters x and y should be given in screen coordinates. If no component is found an exception is raised unless raise is set to False. In that case a Null/Nothing object is returned.
AddHistoryEntry(Fieldname, Value) = SAP GUI for Windows has an input historyfunctionality, which displays for text fields the entries made inthe past as a suggestion. With this function, an entry can be addedto the history database so that it will be available the next timethe end user accesses the text field with the given fieldname
CreateGuiCollection() = Some functions accept collections asparameters. This function creates a collection object that isindependent of the scripting language used, such as VBScript or JavaScript.
CreateSession() = !vm.
CreateSession() = create session
DropHistory() = Calling this function will delete all entries from theinput history. The function returns True if the history data havebeen deleted successfully
Ignore(WindowHandle) = Calling this function will delete all entries from theinput history. The function returns True if the history data havebeen deleted successfully
OpenConnection(Description, Sync, Raise) = The parameter connectString should contain one of the descriptionsdisplayed in SAPlogon, for example "XYZ [PUBLIC]". If you want tocreate a new SAP GUI instance and place it within your applicationyou may add the suffix “/INPLACE”. \nThis function will raisethe exception E_ACCESSDENIED if the scripting support has beendisabled by the administrator or the user
OpenConnectionByConnectionString(ConnectString, Sync, Raise) = The parameter connectionData is the connectionstring for the SAP server, for example “/R/ALR/G/SPACE”. See thedescription of the openConnection method for a discussion of thesync and raise parameters.
RegisterROT() = Accessing the SAPGUI entry in the Running Object Table from a C++application may fail unless the interface is registered with astrong reference. This is not required when using Visual Basic orscripting languages.The reference must be released using revokeRotbefore shutting down the Scripting component. Failing to do so willlead to undefined behaviour.Most applications do not need to usethis method, and shouldn’t call it.
RevokeROT() = This method must be called before shutting down the Scripting component ifregisterROT was used.
SetCookie(WindowHandle) = Object
ClearErrorList() = This method clears the list of errors that may be created when ActiveX controls are found on a screen that do not support SAP GUI Scripting. Otherwise the list is cleared after an error event was raised. This happens at the end of a round trip.
EndTransaction = Calling this function has the same effect as SendCommand("/n").
GetIconResourceName(str) = In SAP GUI icons are often described as text in the format @nn@ where nn is a number. The function getIconResourceName translates the @nn@ notation into the name of the resource in sapbtmp.dll.
GetVKeyDescription(VKey) = When a script is recorded, it will often contain sendVKey(n) calls, where n is a number. The method getVKeyDescription translates these numbers into a readable text. For example the number 0 is translated into the text “Enter”.
LockSessionUI() = This method locks the session so that no user interaction is possible until the session is unlocked using UnlockSessionUI.
UnlockSessionUI() = This method unlocks the session after it was locked using LockSessionUI.
ContainerType =ContainerType
Id =Id
Name =Name
Parent =Parent
Type =Type
TypeAsNumber =TypeAsNumber
Children =Children
ActiveWindow =ActiveWindow
Busy =Busy
ErrorList =ErrorList
Info =Info
IsActive =IsActive
IsListBoxActive =IsListBoxActive
ProgressPercent= ProgressPercent
ProgressText = ProgressText
ShowDropdownKeys = ShowDropdownKeys
SuppressBackendPopups = SuppressBackendPopups
TestToolMode = TestToolMode
end intellisense**/

/**intellisense(!vm)
addPlantCodeMM03() = 自动填写工厂代号
addPlantCodeCS12() = 自动填写工厂代号
addPlantCodeCS15() = 自动填写工厂代号
end intellisense**/

/**intellisense(!GuiComponent)
ContainerType = ContainerType
Id = Id
Name = Name
Parent = Parent
Type = Type
TypeAsNumber = TypeAsNumber
Children = Children
text = 文本内容
select() = 选取菜单
press() = 点击
StartTransaction(tcode) = 首先开始执行
selected = 选中状态
setFocus() = 获取焦点
caretPosition = 光标位置
end intellisense**/
