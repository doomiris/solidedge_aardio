//SAP 支持库
import com;

var table = ..table;
var string = ..string;

namespace SAP;
class session{
	ctor( ... ){
		this.oGui = ..com.TryGetObject("SAPGUI");
		if( ! this.oGui ) return null,"请先打开SAP";
		this.oApp =  this.oGui.GetScriptingEngine();
		this.oConn = this.oApp.Children.item(0);
		this.oSession = this.oConn.Children.item(0);
	};
	@_metaProperty;
}
namespace session{
  import util.metaProperty; 
  _metaProperty = util.metaProperty( 
	get = function(k){
		return owner.oSession[k]
	};
	set = function(k,v){
		owner.oSession[k] = v;
	};
/*
	nameRule = {
		_get = function(){
			return tonumber(..VBASettingIO.GetSetting("Domisoft", "Config", "pdfNameRule", 0)); 
		}
		_set = function(v){
			..VBASettingIO.SaveSetting("Domisoft", "Config", "pdfNameRule", v); 
		}	
	};
 */
	Close = function(){
		owner.oConn.CloseSession(owner.oSession.id);
	};
	downloadBOM = function(winform, etab){
		import win;
		import QHC;	
		var session = owner.oSession;

		while(session.findById("wnd[0]/tbar[0]/btn[12]").Changeable){
			session.findById("wnd[0]/tbar[0]/btn[12]").press();
			try{
				session.findById("wnd[1]/usr/btnSPOP-OPTION1").press(); //不保存退出订单界面
			}
		}
		
		session.findById("wnd[0]/tbar[0]/okcd").text = "ZMDM_001";
		session.findById("wnd[0]").sendVKey(0);
		var ftab = {}
		for (i = 1; #etab){
    		session.findById("wnd[0]/usr/ctxtS_MATNR-LOW").text = etab[i];
    		session.findById("wnd[0]/tbar[1]/btn[8]").press();
    		 			
 			var vt = QHC.getSapItem(etab[i]);
 			var filename;
 			if !vt continue;
    		filename = vt.物料描述;    		
    		filename = string.replace(filename, " ", "_");
    		filename = etab[i] ++ "_" ++ filename ++ ".xlsx";
    		table.push(ftab, filename);
    		var test;
    		try{
    			test = session.findById("wnd[0]/tbar[1]/btn[9]");    	
    		}	
    		if test {
    			session.findById("wnd[0]/tbar[1]/btn[9]").press(); //zmdm_001 里面的download
    			session.findById("wnd[1]/usr/ctxtDY_FILENAME").text = filename;
    			session.findById("wnd[1]/tbar[0]/btn[11]").press();
    			session.findById("wnd[0]/tbar[0]/btn[12]").press();//[x]取消
    			..publish("bom_down",filename);
    		}else{ //搜索不到时跳过,继续下一个
				while(session.findById("wnd[0]/tbar[0]/btn[12]").Changeable){
					session.findById("wnd[0]/tbar[0]/btn[12]").press();
				}
				session.findById("wnd[0]/tbar[0]/okcd").text = "ZMDM_001";
				session.findById("wnd[0]").sendVKey(0);
    			continue;
    		}
		}
		session.findById("wnd[0]/tbar[0]/btn[12]").press();
		winform.publish("dok", ftab);
		win.loopMessage();
	};
	downloadEuroTif = function(){
		var session = owner.oSession;
		var rev = session.findById("wnd[0]/usr/ctxtDRAW-DOKVR").text;
		var nodes = session.findById("wnd[0]/usr/tabsTAB_MAIN/tabpTSMAIN/ssubSCR_MAIN:SAPLCV110:0102/cntlCTL_FILES1/shellcont/shell/shellcont[1]/shell").GetSelectedNodes();
		if !nodes return ; 
		if nodes.Count !== 1 return ; 
		var node = nodes.item(1); //?????
		session.findById("wnd[0]/mbar/menu[5]/menu[5]").select();
		var filename = session.findById("wnd[1]/usr/ctxtDRAW-FILEP").text;
		filename = table.pop(string.split(filename,"\"));
		filename = string.replace(filename, "_", "_" ++ rev ++ "_");
		session.findById("wnd[1]/usr/ctxtDRAW-FILEP").text = "D:\users\CCL100100\cad_sap\" ++ filename;
		session.findById("wnd[1]/tbar[0]/btn[0]").press();
	}
	
	
  )
}
namespace session{


	

}

/**intellisense()
SAP.session = SAP支持库
SAP.session() = !session.
!session.Close() = 关闭GUI
session.findById(controll_id) = 按ID查找控件
session.downloadBOM(arr) = 下载BOM
session.downloadEuroTif() = EURO sap DOWNLOAD tif
!session.findById() = !SAP_Element.
!SAP_Element.press() = 点击
!SAP_Element.text = 文本内容
!SAP_Element.selected = 选中状态
!SAP_Element.setFocus() = 获取焦点
!SAP_Element.caretPosition = 光标位置
?SAP.session = !session.
session.AddHistoryEntry(Fieldname, Value) = SAP GUI for Windows has an input historyfunctionality, which displays for text fields the entries made inthe past as a suggestion. With this function, an entry can be addedto the history database so that it will be available the next timethe end user accesses the text field with the given fieldname
session.CreateGuiCollection() = Some functions accept collections asparameters. This function creates a collection object that isindependent of the scripting language used, such as VBScript orJavaScript
session.DropHistory() = Calling this function will delete all entries from theinput history. The function returns True if the history data havebeen deleted successfully
session.Ignore(WindowHandle) = Calling this function will delete all entries from theinput history. The function returns True if the history data havebeen deleted successfully
session.OpenConnection(Description, Sync, Raise) = The parameter connectString should contain one of the descriptionsdisplayed in SAPlogon, for example "XYZ [PUBLIC]". If you want tocreate a new SAP GUI instance and place it within your applicationyou may add the suffix “/INPLACE”. \nThis function will raisethe exception E_ACCESSDENIED if the scripting support has beendisabled by the administrator or the user
session.OpenConnectionByConnectionString(ConnectString, Sync, Raise) = The parameter connectionData is the connectionstring for the SAP server, for example “/R/ALR/G/SPACE”. See thedescription of the openConnection method for a discussion of thesync and raise parameters.
session.RegisterROT() = Accessing the SAPGUI entry in the Running Object Table from a C++application may fail unless the interface is registered with astrong reference. This is not required when using Visual Basic orscripting languages.The reference must be released using revokeRotbefore shutting down the Scripting component. Failing to do so willlead to undefined behaviour.Most applications do not need to usethis method, and shouldn’t call it.
session.RevokeROT() = This method must be called before shutting down the Scripting component ifregisterROT was used.
session.SetCookie( WindowHandle) = Object
end intellisense**/